// Code generated by cmd/cgo; DO NOT EDIT.

//line /root/go/src/github.com/cypherium/cypher/vendor/gopkg.in/olebedev/go-duktape.v3/api.go:1:1
package duktape; import _cgo_unsafe "unsafe"

/*
#cgo !windows CFLAGS: -std=c99 -O3 -Wall -Wno-unused-value -fomit-frame-pointer -fstrict-aliasing
#cgo windows CFLAGS: -O3 -Wall -Wno-unused-value -fomit-frame-pointer -fstrict-aliasing

#include "duktape.h"
#include "duk_logging.h"
#include "duk_v1_compat.h"
#include "duk_print_alert.h"
static void _duk_eval_string(duk_context *ctx, const char *str) {
  duk_eval_string(ctx, str);
}
static void _duk_compile(duk_context *ctx, duk_uint_t flags) {
  duk_compile(ctx, flags);
}
static void _duk_compile_file(duk_context *ctx, duk_uint_t flags, const char *path) {
  duk_compile_file(ctx, flags, path);
}
static void _duk_compile_lstring(duk_context *ctx, duk_uint_t flags, const char *src, duk_size_t len) {
	duk_compile_lstring(ctx, flags, src, len);
}
static void _duk_compile_lstring_filename(duk_context *ctx, duk_uint_t flags, const char *src, duk_size_t len) {
	duk_compile_lstring_filename(ctx, flags, src, len);
}
static void _duk_compile_string(duk_context *ctx, duk_uint_t flags, const char *src) {
	duk_compile_string(ctx, flags, src);
}
static void _duk_compile_string_filename(duk_context *ctx, duk_uint_t flags, const char *src) {
	duk_compile_string_filename(ctx, flags, src);
}
static void _duk_dump_context_stderr(duk_context *ctx) {
	duk_dump_context_stderr(ctx);
}
static void _duk_dump_context_stdout(duk_context *ctx) {
	duk_dump_context_stdout(ctx);
}
static void _duk_eval(duk_context *ctx) {
	duk_eval(ctx);
}
static void _duk_eval_file(duk_context *ctx, const char *path) {
	duk_eval_file(ctx, path);
}
static void _duk_eval_file_noresult(duk_context *ctx, const char *path) {
	duk_eval_file_noresult(ctx, path);
}
static void _duk_eval_lstring(duk_context *ctx, const char *src, duk_size_t len) {
	duk_eval_lstring(ctx, src, len);
}
static void _duk_eval_lstring_noresult(duk_context *ctx, const char *src, duk_size_t len) {
	duk_eval_lstring_noresult(ctx, src, len);
}
static void _duk_eval_noresult(duk_context *ctx) {
	duk_eval_noresult(ctx);
}
static void _duk_eval_string_noresult(duk_context *ctx, const char *src) {
	duk_eval_string_noresult(ctx, src);
}
static duk_bool_t _duk_is_error(duk_context *ctx, duk_idx_t index) {
	return duk_is_error(ctx, index);
}
static duk_bool_t _duk_is_object_coercible(duk_context *ctx, duk_idx_t index) {
	return duk_is_object_coercible(ctx, index);
}
static duk_int_t _duk_pcompile(duk_context *ctx, duk_uint_t flags) {
	return duk_pcompile(ctx, flags);
}
static duk_int_t _duk_pcompile_file(duk_context *ctx, duk_uint_t flags, const char *path) {
	return duk_pcompile_file(ctx, flags, path);
}
static duk_int_t _duk_pcompile_lstring(duk_context *ctx, duk_uint_t flags, const char *src, duk_size_t len) {
	return duk_pcompile_lstring(ctx, flags, src, len);
}
static duk_int_t _duk_pcompile_lstring_filename(duk_context *ctx, duk_uint_t flags, const char *src, duk_size_t len) {
	return duk_pcompile_lstring_filename(ctx, flags, src, len);
}
static duk_int_t _duk_pcompile_string(duk_context *ctx, duk_uint_t flags, const char *src) {
	return duk_pcompile_string(ctx, flags, src);
}
static duk_int_t _duk_pcompile_string_filename(duk_context *ctx, duk_uint_t flags, const char *src) {
	return duk_pcompile_string_filename(ctx, flags, src);
}
static duk_int_t _duk_peval(duk_context *ctx) {
	return duk_peval(ctx);
}
static duk_int_t _duk_peval_file(duk_context *ctx, const char *path) {
	return duk_peval_file(ctx, path);
}
static duk_int_t _duk_peval_file_noresult(duk_context *ctx, const char *path) {
	return duk_peval_file_noresult(ctx, path);
}
static duk_int_t _duk_peval_lstring(duk_context *ctx, const char *src, duk_size_t len) {
	return duk_peval_lstring(ctx, src, len);
}
static duk_int_t _duk_peval_lstring_noresult(duk_context *ctx, const char *src, duk_size_t len) {
	return duk_peval_lstring_noresult(ctx, src, len);
}
static duk_int_t _duk_peval_noresult(duk_context *ctx) {
	return duk_peval_noresult(ctx);
}
static duk_int_t _duk_peval_string(duk_context *ctx, const char *src) {
	return duk_peval_string(ctx, src);
}
static duk_int_t _duk_peval_string_noresult(duk_context *ctx, const char *src) {
	return duk_peval_string_noresult(ctx, src);
}
static const char *_duk_push_string_file(duk_context *ctx, const char *path) {
	return duk_push_string_file(ctx, path);
}
static duk_idx_t _duk_push_thread(duk_context *ctx) {
	return duk_push_thread(ctx);
}
static duk_idx_t _duk_push_thread_new_globalenv(duk_context *ctx) {
	return duk_push_thread_new_globalenv(ctx);
}
static void _duk_require_object_coercible(duk_context *ctx, duk_idx_t index) {
	duk_require_object_coercible(ctx, index);
}
static void _duk_require_type_mask(duk_context *ctx, duk_idx_t index, duk_uint_t mask) {
	duk_require_type_mask(ctx, index, mask);
}
static const char *_duk_safe_to_string(duk_context *ctx, duk_idx_t index) {
	return duk_safe_to_string(ctx, index);
}
static void _duk_xcopy_top(duk_context *to_ctx, duk_context *from_ctx, duk_idx_t count) {
	duk_xcopy_top(to_ctx, from_ctx, count);
}
static void _duk_xmove_top(duk_context *to_ctx, duk_context *from_ctx, duk_idx_t count) {
	duk_xmove_top(to_ctx, from_ctx, count);
}
static void *_duk_to_buffer(duk_context *ctx, duk_idx_t index, duk_size_t *out_size) {
	return duk_to_buffer(ctx, index, out_size);
}
static void *_duk_to_dynamic_buffer(duk_context *ctx, duk_idx_t index, duk_size_t *out_size) {
	return duk_to_dynamic_buffer(ctx, index, out_size);
}
static void *_duk_to_fixed_buffer(duk_context *ctx, duk_idx_t index, duk_size_t *out_size) {
	return duk_to_fixed_buffer(ctx, index, out_size);
}
static duk_int_t _duk_is_primitive(duk_context *ctx, duk_idx_t index) {
  return duk_is_primitive(ctx, index);
}
static void *_duk_push_buffer(duk_context *ctx, duk_size_t size, duk_bool_t dynamic) {
	return duk_push_buffer(ctx, size, dynamic);
}
static void *_duk_push_fixed_buffer(duk_context *ctx, duk_size_t size) {
	return duk_push_fixed_buffer(ctx, size);
}
static void *_duk_push_dynamic_buffer(duk_context *ctx, duk_size_t size) {
	return duk_push_dynamic_buffer(ctx, size);
}
static void _duk_error(duk_context *ctx, duk_errcode_t err_code, const char *str) {
	duk_error(ctx, err_code, "%s", str);
}
static void _duk_push_error_object(duk_context *ctx, duk_errcode_t err_code, const char *str) {
	duk_push_error_object(ctx, err_code, "%s", str);
}
static void _duk_error_raw(duk_context *ctx, duk_errcode_t err_code, const char *filename, duk_int_t line, const char *text) {
	duk_error_raw(ctx, err_code, filename, line, text);
}
static void _duk_log(duk_context *ctx, duk_int_t level, const char *str) {
	duk_log(ctx, level, "%s", str);
}
static void _duk_push_external_buffer(duk_context *ctx) {
	duk_push_external_buffer(ctx);
}
*/
import _ "unsafe"
import (
	"fmt"
	"unsafe"
)

// See: http://duktape.org/api.html#duk_alloc
func (d *Context) Alloc(size int) unsafe.Pointer {
	return func() _cgo_unsafe.Pointer{ _cgo0 := /*line :176:21*/d.duk_context; var _cgo1 _Ctype_duk_size_t = _Ctype_duk_size_t /*line :176:48*/(size); _cgoCheckPointer(_cgo0, nil); return /*line :176:55*/_Cfunc_duk_alloc(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_alloc_raw
func (d *Context) AllocRaw(size int) unsafe.Pointer {
	return func() _cgo_unsafe.Pointer{ _cgo0 := /*line :181:25*/d.duk_context; var _cgo1 _Ctype_duk_size_t = _Ctype_duk_size_t /*line :181:52*/(size); _cgoCheckPointer(_cgo0, nil); return /*line :181:59*/_Cfunc_duk_alloc_raw(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_base64_decode
func (d *Context) Base64Decode(index int) {
	func() { _cgo0 := /*line :186:22*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :186:48*/(index); _cgoCheckPointer(_cgo0, nil); /*line :186:56*/_Cfunc_duk_base64_decode(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_base64_encode
func (d *Context) Base64Encode(index int) string {
	if s := func() *_Ctype_char{ _cgo0 := /*line :191:30*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :191:56*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :191:64*/_Cfunc_duk_base64_encode(_cgo0, _cgo1); }(); s != nil {
		return ( /*line :192:10*/_Cfunc_GoString /*line :192:19*/)(s)
	}
	return ""
}

// See: http://duktape.org/api.html#duk_call
func (d *Context) Call(nargs int) {
	func() { _cgo0 := /*line :199:13*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :199:39*/(nargs); _cgoCheckPointer(_cgo0, nil); /*line :199:47*/_Cfunc_duk_call(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_call_method
func (d *Context) CallMethod(nargs int) {
	func() { _cgo0 := /*line :204:20*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :204:46*/(nargs); _cgoCheckPointer(_cgo0, nil); /*line :204:54*/_Cfunc_duk_call_method(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_call_prop
func (d *Context) CallProp(objIndex int, nargs int) {
	func() { _cgo0 := /*line :209:18*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :209:44*/(objIndex); var _cgo2 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :209:67*/(nargs); _cgoCheckPointer(_cgo0, nil); /*line :209:75*/_Cfunc_duk_call_prop(_cgo0, _cgo1, _cgo2); }()
}

// See: http://duktape.org/api.html#duk_check_stack
func (d *Context) CheckStack(extra int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :214:31*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :214:57*/(extra); _cgoCheckPointer(_cgo0, nil); return /*line :214:65*/_Cfunc_duk_check_stack(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_check_stack_top
func (d *Context) CheckStackTop(top int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :219:35*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :219:61*/(top); _cgoCheckPointer(_cgo0, nil); return /*line :219:67*/_Cfunc_duk_check_stack_top(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_check_type
func (d *Context) CheckType(index int, typ int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :224:30*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :224:56*/(index); var _cgo2 _Ctype_duk_int_t = _Ctype_duk_int_t /*line :224:76*/(typ); _cgoCheckPointer(_cgo0, nil); return /*line :224:82*/_Cfunc_duk_check_type(_cgo0, _cgo1, _cgo2); }()) == 1
}

// See: http://duktape.org/api.html#duk_check_type_mask
func (d *Context) CheckTypeMask(index int, mask uint) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :229:35*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :229:61*/(index); var _cgo2 _Ctype_duk_uint_t = _Ctype_duk_uint_t /*line :229:82*/(mask); _cgoCheckPointer(_cgo0, nil); return /*line :229:89*/_Cfunc_duk_check_type_mask(_cgo0, _cgo1, _cgo2); }()) == 1
}

// See: http://duktape.org/api.html#duk_compact
func (d *Context) Compact(objIndex int) {
	func() { _cgo0 := /*line :234:16*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :234:42*/(objIndex); _cgoCheckPointer(_cgo0, nil); /*line :234:53*/_Cfunc_duk_compact(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_compile
func (d *Context) Compile(flags uint) {
	func() { _cgo0 := /*line :239:17*/d.duk_context; var _cgo1 _Ctype_duk_uint_t = _Ctype_duk_uint_t /*line :239:44*/(flags); _cgoCheckPointer(_cgo0, nil); /*line :239:52*/_Cfunc__duk_compile(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_compile_file
func (d *Context) CompileFile(flags uint, path string) {
	__path__ := ( /*line :244:14*/_Cfunc_CString /*line :244:22*/)(path)
	func() { _cgo0 := /*line :245:22*/d.duk_context; var _cgo1 _Ctype_duk_uint_t = _Ctype_duk_uint_t /*line :245:49*/(flags); var _cgo2 *_Ctype_char = /*line :245:58*/__path__; _cgoCheckPointer(_cgo0, nil); /*line :245:67*/_Cfunc__duk_compile_file(_cgo0, _cgo1, _cgo2); }()
	func() { _cgo0 := /*line :246:9*/unsafe.Pointer(__path__); _cgoCheckPointer(_cgo0, nil); /*line :246:34*/_Cfunc_free(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_compile_lstring
func (d *Context) CompileLstring(flags uint, src string, len int) {
	__src__ := ( /*line :251:13*/_Cfunc_CString /*line :251:21*/)(src)
	func() { _cgo0 := /*line :252:25*/d.duk_context; var _cgo1 _Ctype_duk_uint_t = _Ctype_duk_uint_t /*line :252:52*/(flags); var _cgo2 *_Ctype_char = /*line :252:61*/__src__; var _cgo3 _Ctype_duk_size_t = _Ctype_duk_size_t /*line :252:82*/(len); _cgoCheckPointer(_cgo0, nil); /*line :252:88*/_Cfunc__duk_compile_lstring(_cgo0, _cgo1, _cgo2, _cgo3); }()
	func() { _cgo0 := /*line :253:9*/unsafe.Pointer(__src__); _cgoCheckPointer(_cgo0, nil); /*line :253:33*/_Cfunc_free(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_compile_lstring_filename
func (d *Context) CompileLstringFilename(flags uint, src string, len int) {
	__src__ := ( /*line :258:13*/_Cfunc_CString /*line :258:21*/)(src)
	func() { _cgo0 := /*line :259:34*/d.duk_context; var _cgo1 _Ctype_duk_uint_t = _Ctype_duk_uint_t /*line :259:61*/(flags); var _cgo2 *_Ctype_char = /*line :259:70*/__src__; var _cgo3 _Ctype_duk_size_t = _Ctype_duk_size_t /*line :259:91*/(len); _cgoCheckPointer(_cgo0, nil); /*line :259:97*/_Cfunc__duk_compile_lstring_filename(_cgo0, _cgo1, _cgo2, _cgo3); }()
	func() { _cgo0 := /*line :260:9*/unsafe.Pointer(__src__); _cgoCheckPointer(_cgo0, nil); /*line :260:33*/_Cfunc_free(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_compile_string
func (d *Context) CompileString(flags uint, src string) {
	__src__ := ( /*line :265:13*/_Cfunc_CString /*line :265:21*/)(src)
	func() { _cgo0 := /*line :266:24*/d.duk_context; var _cgo1 _Ctype_duk_uint_t = _Ctype_duk_uint_t /*line :266:51*/(flags); var _cgo2 *_Ctype_char = /*line :266:60*/__src__; _cgoCheckPointer(_cgo0, nil); /*line :266:68*/_Cfunc__duk_compile_string(_cgo0, _cgo1, _cgo2); }()
	func() { _cgo0 := /*line :267:9*/unsafe.Pointer(__src__); _cgoCheckPointer(_cgo0, nil); /*line :267:33*/_Cfunc_free(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_compile_string_filename
func (d *Context) CompileStringFilename(flags uint, src string) {
	__src__ := ( /*line :272:13*/_Cfunc_CString /*line :272:21*/)(src)
	func() { _cgo0 := /*line :273:33*/d.duk_context; var _cgo1 _Ctype_duk_uint_t = _Ctype_duk_uint_t /*line :273:60*/(flags); var _cgo2 *_Ctype_char = /*line :273:69*/__src__; _cgoCheckPointer(_cgo0, nil); /*line :273:77*/_Cfunc__duk_compile_string_filename(_cgo0, _cgo1, _cgo2); }()
	func() { _cgo0 := /*line :274:9*/unsafe.Pointer(__src__); _cgoCheckPointer(_cgo0, nil); /*line :274:33*/_Cfunc_free(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_concat
func (d *Context) Concat(count int) {
	func() { _cgo0 := /*line :279:15*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :279:41*/(count); _cgoCheckPointer(_cgo0, nil); /*line :279:49*/_Cfunc_duk_concat(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_copy
func (d *Context) Copy(fromIndex int, toIndex int) {
	func() { _cgo0 := /*line :284:13*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :284:39*/(fromIndex); var _cgo2 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :284:63*/(toIndex); _cgoCheckPointer(_cgo0, nil); /*line :284:73*/_Cfunc_duk_copy(_cgo0, _cgo1, _cgo2); }()
}

// See: http://duktape.org/api.html#duk_del_prop
func (d *Context) DelProp(objIndex int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :289:28*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :289:54*/(objIndex); _cgoCheckPointer(_cgo0, nil); return /*line :289:65*/_Cfunc_duk_del_prop(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_del_prop_index
func (d *Context) DelPropIndex(objIndex int, arrIndex uint) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :294:34*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :294:60*/(objIndex); var _cgo2 _Ctype_duk_uarridx_t = _Ctype_duk_uarridx_t /*line :294:87*/(arrIndex); _cgoCheckPointer(_cgo0, nil); return /*line :294:98*/_Cfunc_duk_del_prop_index(_cgo0, _cgo1, _cgo2); }()) == 1
}

// See: http://duktape.org/api.html#duk_del_prop_string
func (d *Context) DelPropString(objIndex int, key string) bool {
	__key__ := ( /*line :299:13*/_Cfunc_CString /*line :299:21*/)(key)
	result := int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :300:38*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :300:64*/(objIndex); var _cgo2 *_Ctype_char = /*line :300:76*/__key__; _cgoCheckPointer(_cgo0, nil); return /*line :300:84*/_Cfunc_duk_del_prop_string(_cgo0, _cgo1, _cgo2); }()) == 1
	func() { _cgo0 := /*line :301:9*/unsafe.Pointer(__key__); _cgoCheckPointer(_cgo0, nil); /*line :301:33*/_Cfunc_free(_cgo0); }()
	return result
}

// See: http://duktape.org/api.html#duk_def_prop
func (d *Context) DefProp(objIndex int, flags uint) {
	func() { _cgo0 := /*line :307:17*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :307:43*/(objIndex); var _cgo2 _Ctype_duk_uint_t = _Ctype_duk_uint_t /*line :307:67*/(flags); _cgoCheckPointer(_cgo0, nil); /*line :307:75*/_Cfunc_duk_def_prop(_cgo0, _cgo1, _cgo2); }()
}

// See: http://duktape.org/api.html#duk_destroy_heap
func (d *Context) DestroyHeap() {
	d.Gc(0)
	func() { _cgo0 := /*line :313:21*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :313:35*/_Cfunc_duk_destroy_heap(_cgo0); }()
	d.duk_context = nil
}

// See: http://duktape.org/api.html#duk_dump_context_stderr
func (d *Context) DumpContextStderr() {
	func() { _cgo0 := /*line :319:29*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :319:43*/_Cfunc__duk_dump_context_stderr(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_dump_context_stdout
func (d *Context) DumpContextStdout() {
	func() { _cgo0 := /*line :324:29*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :324:43*/_Cfunc__duk_dump_context_stdout(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_dup
func (d *Context) Dup(fromIndex int) {
	func() { _cgo0 := /*line :329:12*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :329:38*/(fromIndex); _cgoCheckPointer(_cgo0, nil); /*line :329:50*/_Cfunc_duk_dup(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_dup_top
func (d *Context) DupTop() {
	func() { _cgo0 := /*line :334:16*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :334:30*/_Cfunc_duk_dup_top(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_enum
func (d *Context) Enum(objIndex int, enumFlags uint) {
	func() { _cgo0 := /*line :339:13*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :339:39*/(objIndex); var _cgo2 _Ctype_duk_uint_t = _Ctype_duk_uint_t /*line :339:63*/(enumFlags); _cgoCheckPointer(_cgo0, nil); /*line :339:75*/_Cfunc_duk_enum(_cgo0, _cgo1, _cgo2); }()
}

// See: http://duktape.org/api.html#duk_equals
func (d *Context) Equals(index1 int, index2 int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :344:26*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :344:52*/(index1); var _cgo2 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :344:73*/(index2); _cgoCheckPointer(_cgo0, nil); return /*line :344:82*/_Cfunc_duk_equals(_cgo0, _cgo1, _cgo2); }()) == 1
}

// Error pushes a new Error object to the stack and throws it. This will call
// fmt.Sprint, forwarding arguments after the error code, to produce the
// Error's message.
//
// See: http://duktape.org/api.html#duk_error
func (d *Context) Error(errCode int, str string) {
	__str__ := ( /*line :353:13*/_Cfunc_CString /*line :353:21*/)(str)
	func() { _cgo0 := /*line :354:15*/d.duk_context; var _cgo1 _Ctype_duk_errcode_t = _Ctype_duk_errcode_t /*line :354:45*/(errCode); var _cgo2 *_Ctype_char = /*line :354:56*/__str__; _cgoCheckPointer(_cgo0, nil); /*line :354:64*/_Cfunc__duk_error(_cgo0, _cgo1, _cgo2); }()
	func() { _cgo0 := /*line :355:9*/unsafe.Pointer(__str__); _cgoCheckPointer(_cgo0, nil); /*line :355:33*/_Cfunc_free(_cgo0); }()
}

func (d *Context) ErrorRaw(errCode int, filename string, line int, errMsg string) {
	__filename__ := ( /*line :359:18*/_Cfunc_CString /*line :359:26*/)(filename)
	__errMsg__ := ( /*line :360:16*/_Cfunc_CString /*line :360:24*/)(errMsg)
	func() { _cgo0 := /*line :361:19*/d.duk_context; var _cgo1 _Ctype_duk_errcode_t = _Ctype_duk_errcode_t /*line :361:49*/(errCode); var _cgo2 *_Ctype_char = /*line :361:60*/__filename__; var _cgo3 _Ctype_duk_int_t = _Ctype_duk_int_t /*line :361:85*/(line); var _cgo4 *_Ctype_char = /*line :361:93*/__errMsg__; _cgoCheckPointer(_cgo0, nil); /*line :361:104*/_Cfunc__duk_error_raw(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }()
	func() { _cgo0 := /*line :362:9*/unsafe.Pointer(__filename__); _cgoCheckPointer(_cgo0, nil); /*line :362:38*/_Cfunc_free(_cgo0); }()
	func() { _cgo0 := /*line :363:9*/unsafe.Pointer(__errMsg__); _cgoCheckPointer(_cgo0, nil); /*line :363:36*/_Cfunc_free(_cgo0); }()
}

// Errorf pushes a new Error object to the stack and throws it. This will call
// fmt.Sprintf, forwarding the format string and additional arguments, to
// produce the Error's message.
//
// See: http://duktape.org/api.html#duk_error
func (d *Context) Errorf(errCode int, format string, a ...interface{}) {
	str := fmt.Sprintf(format, a...)
	__str__ := ( /*line :373:13*/_Cfunc_CString /*line :373:21*/)(str)
	func() { _cgo0 := /*line :374:15*/d.duk_context; var _cgo1 _Ctype_duk_errcode_t = _Ctype_duk_errcode_t /*line :374:45*/(errCode); var _cgo2 *_Ctype_char = /*line :374:56*/__str__; _cgoCheckPointer(_cgo0, nil); /*line :374:64*/_Cfunc__duk_error(_cgo0, _cgo1, _cgo2); }()
	func() { _cgo0 := /*line :375:9*/unsafe.Pointer(__str__); _cgoCheckPointer(_cgo0, nil); /*line :375:33*/_Cfunc_free(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_eval
func (d *Context) Eval() {
	func() { _cgo0 := /*line :380:14*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :380:28*/_Cfunc__duk_eval(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_eval_file
func (d *Context) EvalFile(path string) {
	__path__ := ( /*line :385:14*/_Cfunc_CString /*line :385:22*/)(path)
	func() { _cgo0 := /*line :386:19*/d.duk_context; var _cgo1 *_Ctype_char = /*line :386:34*/__path__; _cgoCheckPointer(_cgo0, nil); /*line :386:43*/_Cfunc__duk_eval_file(_cgo0, _cgo1); }()
	func() { _cgo0 := /*line :387:9*/unsafe.Pointer(__path__); _cgoCheckPointer(_cgo0, nil); /*line :387:34*/_Cfunc_free(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_eval_file_noresult
func (d *Context) EvalFileNoresult(path string) {
	__path__ := ( /*line :392:14*/_Cfunc_CString /*line :392:22*/)(path)
	func() { _cgo0 := /*line :393:28*/d.duk_context; var _cgo1 *_Ctype_char = /*line :393:43*/__path__; _cgoCheckPointer(_cgo0, nil); /*line :393:52*/_Cfunc__duk_eval_file_noresult(_cgo0, _cgo1); }()
	func() { _cgo0 := /*line :394:9*/unsafe.Pointer(__path__); _cgoCheckPointer(_cgo0, nil); /*line :394:34*/_Cfunc_free(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_eval_lstring
func (d *Context) EvalLstring(src string, len int) {
	__src__ := ( /*line :399:13*/_Cfunc_CString /*line :399:21*/)(src)
	func() { _cgo0 := /*line :400:22*/d.duk_context; var _cgo1 *_Ctype_char = /*line :400:37*/__src__; var _cgo2 _Ctype_duk_size_t = _Ctype_duk_size_t /*line :400:58*/(len); _cgoCheckPointer(_cgo0, nil); /*line :400:64*/_Cfunc__duk_eval_lstring(_cgo0, _cgo1, _cgo2); }()
	func() { _cgo0 := /*line :401:9*/unsafe.Pointer(__src__); _cgoCheckPointer(_cgo0, nil); /*line :401:33*/_Cfunc_free(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_eval_lstring_noresult
func (d *Context) EvalLstringNoresult(src string, len int) {
	__src__ := ( /*line :406:13*/_Cfunc_CString /*line :406:21*/)(src)
	func() { _cgo0 := /*line :407:31*/d.duk_context; var _cgo1 *_Ctype_char = /*line :407:46*/__src__; var _cgo2 _Ctype_duk_size_t = _Ctype_duk_size_t /*line :407:67*/(len); _cgoCheckPointer(_cgo0, nil); /*line :407:73*/_Cfunc__duk_eval_lstring_noresult(_cgo0, _cgo1, _cgo2); }()
	func() { _cgo0 := /*line :408:9*/unsafe.Pointer(__src__); _cgoCheckPointer(_cgo0, nil); /*line :408:33*/_Cfunc_free(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_eval_noresult
func (d *Context) EvalNoresult() {
	func() { _cgo0 := /*line :413:23*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :413:37*/_Cfunc__duk_eval_noresult(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_eval_string
func (d *Context) EvalString(src string) {
	__src__ := ( /*line :418:13*/_Cfunc_CString /*line :418:21*/)(src)
	func() { _cgo0 := /*line :419:21*/d.duk_context; var _cgo1 *_Ctype_char = /*line :419:36*/__src__; _cgoCheckPointer(_cgo0, nil); /*line :419:44*/_Cfunc__duk_eval_string(_cgo0, _cgo1); }()
	func() { _cgo0 := /*line :420:9*/unsafe.Pointer(__src__); _cgoCheckPointer(_cgo0, nil); /*line :420:33*/_Cfunc_free(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_eval_string_noresult
func (d *Context) EvalStringNoresult(src string) {
	__src__ := ( /*line :425:13*/_Cfunc_CString /*line :425:21*/)(src)
	func() { _cgo0 := /*line :426:30*/d.duk_context; var _cgo1 *_Ctype_char = /*line :426:45*/__src__; _cgoCheckPointer(_cgo0, nil); /*line :426:53*/_Cfunc__duk_eval_string_noresult(_cgo0, _cgo1); }()
	func() { _cgo0 := /*line :427:9*/unsafe.Pointer(__src__); _cgoCheckPointer(_cgo0, nil); /*line :427:33*/_Cfunc_free(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_fatal
func (d *Context) Fatal(errCode int, errMsg string) {
	__errMsg__ := ( /*line :432:16*/_Cfunc_CString /*line :432:24*/)(errMsg)
	defer func() func() { _cgo0 := /*line :433:15*/unsafe.Pointer(__errMsg__); return func() { _cgoCheckPointer(_cgo0, nil); /*line :433:42*/_Cfunc_free(_cgo0); }}()()
	func() { _cgo0 := /*line :434:18*/d.duk_context; var _cgo1 *_Ctype_char = /*line :434:33*/__errMsg__; _cgoCheckPointer(_cgo0, nil); /*line :434:44*/_Cfunc_duk_fatal_raw(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_gc
func (d *Context) Gc(flags uint) {
	func() { _cgo0 := /*line :439:11*/d.duk_context; var _cgo1 _Ctype_duk_uint_t = _Ctype_duk_uint_t /*line :439:38*/(flags); _cgoCheckPointer(_cgo0, nil); /*line :439:46*/_Cfunc_duk_gc(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_get_boolean
func (d *Context) GetBoolean(index int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :444:31*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :444:57*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :444:65*/_Cfunc_duk_get_boolean(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_get_buffer
func (d *Context) GetBuffer(index int) (rawPtr unsafe.Pointer, outSize uint) {
	rawPtr = func() _cgo_unsafe.Pointer{ _cgo0 := /*line :449:28*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :449:54*/(index); var _cgo2 *_Ctype_duk_size_t = /*line :449:63*/(*_Ctype_duk_size_t /*line :449:77*/)(unsafe.Pointer(&outSize)); _cgoCheckPointer(_cgo0, nil); return /*line :449:105*/_Cfunc_duk_get_buffer(_cgo0, _cgo1, _cgo2); }()
	return rawPtr, outSize
}

// See: http://duktape.org/api.html#duk_get_context
func (d *Context) GetContext(index int) *Context {
	return contextFromPointer(func() *_Ctype_struct_duk_hthread{ _cgo0 := /*line :455:46*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :455:72*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :455:80*/_Cfunc_duk_get_context(_cgo0, _cgo1); }())
}

// See: http://duktape.org/api.html#duk_get_current_magic
func (d *Context) GetCurrentMagic() int {
	return int(func() _Ctype_duk_int_t{ _cgo0 := /*line :460:37*/d.duk_context; _cgoCheckPointer(_cgo0, nil); return /*line :460:51*/_Cfunc_duk_get_current_magic(_cgo0); }())
}

// See: http://duktape.org/api.html#duk_get_error_code
func (d *Context) GetErrorCode(index int) int {
	code := int(func() _Ctype_duk_errcode_t{ _cgo0 := /*line :465:35*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :465:61*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :465:69*/_Cfunc_duk_get_error_code(_cgo0, _cgo1); }())
	return code
}

// See: http://duktape.org/api.html#duk_get_finalizer
func (d *Context) GetFinalizer(index int) {
	func() { _cgo0 := /*line :471:22*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :471:48*/(index); _cgoCheckPointer(_cgo0, nil); /*line :471:56*/_Cfunc_duk_get_finalizer(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_get_global_string
func (d *Context) GetGlobalString(key string) bool {
	__key__ := ( /*line :476:13*/_Cfunc_CString /*line :476:21*/)(key)
	result := int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :477:40*/d.duk_context; var _cgo1 *_Ctype_char = /*line :477:55*/__key__; _cgoCheckPointer(_cgo0, nil); return /*line :477:63*/_Cfunc_duk_get_global_string(_cgo0, _cgo1); }()) == 1
	func() { _cgo0 := /*line :478:9*/unsafe.Pointer(__key__); _cgoCheckPointer(_cgo0, nil); /*line :478:33*/_Cfunc_free(_cgo0); }()
	return result
}

// See: http://duktape.org/api.html#duk_get_heapptr
func (d *Context) GetHeapptr(index int) unsafe.Pointer {
	return unsafe.Pointer(func() _cgo_unsafe.Pointer{ _cgo0 := /*line :484:42*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :484:68*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :484:76*/_Cfunc_duk_get_heapptr(_cgo0, _cgo1); }())
}

// See: http://duktape.org/api.html#duk_get_int
func (d *Context) GetInt(index int) int {
	return int(func() _Ctype_duk_int_t{ _cgo0 := /*line :489:27*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :489:53*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :489:61*/_Cfunc_duk_get_int(_cgo0, _cgo1); }())
}

// See: http://duktape.org/api.html#duk_get_length
func (d *Context) GetLength(index int) int {
	return int(func() _Ctype_duk_size_t{ _cgo0 := /*line :494:30*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :494:56*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :494:64*/_Cfunc_duk_get_length(_cgo0, _cgo1); }())
}

// See: http://duktape.org/api.html#duk_get_lstring
func (d *Context) GetLstring(index int) string {
	if s := func() *_Ctype_char{ _cgo0 := /*line :499:28*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :499:54*/(index); var _cgo2 *_Ctype_duk_size_t = /*line :499:63*/nil; _cgoCheckPointer(_cgo0, nil); return /*line :499:67*/_Cfunc_duk_get_lstring(_cgo0, _cgo1, _cgo2); }(); s != nil {
		return ( /*line :500:10*/_Cfunc_GoString /*line :500:19*/)(s)
	}
	return ""
}

// See: http://duktape.org/api.html#duk_get_magic
func (d *Context) GetMagic(index int) int {
	return int(func() _Ctype_duk_int_t{ _cgo0 := /*line :507:29*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :507:55*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :507:63*/_Cfunc_duk_get_magic(_cgo0, _cgo1); }())
}

// See: http://duktape.org/api.html#duk_get_number
func (d *Context) GetNumber(index int) float64 {
	return float64(func() _Ctype_duk_double_t{ _cgo0 := /*line :512:34*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :512:60*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :512:68*/_Cfunc_duk_get_number(_cgo0, _cgo1); }())
}

// See: http://duktape.org/api.html#duk_get_pointer
func (d *Context) GetPointer(index int) unsafe.Pointer {
	return func() _cgo_unsafe.Pointer{ _cgo0 := /*line :517:27*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :517:53*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :517:61*/_Cfunc_duk_get_pointer(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_get_prop
func (d *Context) GetProp(objIndex int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :522:28*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :522:54*/(objIndex); _cgoCheckPointer(_cgo0, nil); return /*line :522:65*/_Cfunc_duk_get_prop(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_get_prop_index
func (d *Context) GetPropIndex(objIndex int, arrIndex uint) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :527:34*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :527:60*/(objIndex); var _cgo2 _Ctype_duk_uarridx_t = _Ctype_duk_uarridx_t /*line :527:87*/(arrIndex); _cgoCheckPointer(_cgo0, nil); return /*line :527:98*/_Cfunc_duk_get_prop_index(_cgo0, _cgo1, _cgo2); }()) == 1
}

// See: http://duktape.org/api.html#duk_get_prop_string
func (d *Context) GetPropString(objIndex int, key string) bool {
	__key__ := ( /*line :532:13*/_Cfunc_CString /*line :532:21*/)(key)
	result := int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :533:38*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :533:64*/(objIndex); var _cgo2 *_Ctype_char = /*line :533:76*/__key__; _cgoCheckPointer(_cgo0, nil); return /*line :533:84*/_Cfunc_duk_get_prop_string(_cgo0, _cgo1, _cgo2); }()) == 1
	func() { _cgo0 := /*line :534:9*/unsafe.Pointer(__key__); _cgoCheckPointer(_cgo0, nil); /*line :534:33*/_Cfunc_free(_cgo0); }()
	return result
}

// See: http://duktape.org/api.html#duk_get_prototype
func (d *Context) GetPrototype(index int) {
	func() { _cgo0 := /*line :540:22*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :540:48*/(index); _cgoCheckPointer(_cgo0, nil); /*line :540:56*/_Cfunc_duk_get_prototype(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_get_string
func (d *Context) GetString(i int) string {
	if s := func() *_Ctype_char{ _cgo0 := /*line :545:27*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :545:53*/(i); _cgoCheckPointer(_cgo0, nil); return /*line :545:57*/_Cfunc_duk_get_string(_cgo0, _cgo1); }(); s != nil {
		return ( /*line :546:10*/_Cfunc_GoString /*line :546:19*/)(s)
	}
	return ""
}

// See: http://duktape.org/api.html#duk_get_top
func (d *Context) GetTop() int {
	return int(func() _Ctype_duk_idx_t{ _cgo0 := /*line :553:27*/d.duk_context; _cgoCheckPointer(_cgo0, nil); return /*line :553:41*/_Cfunc_duk_get_top(_cgo0); }())
}

// See: http://duktape.org/api.html#duk_get_top_index
func (d *Context) GetTopIndex() int {
	return int(func() _Ctype_duk_idx_t{ _cgo0 := /*line :558:33*/d.duk_context; _cgoCheckPointer(_cgo0, nil); return /*line :558:47*/_Cfunc_duk_get_top_index(_cgo0); }())
}

// See: http://duktape.org/api.html#duk_get_type
func (d *Context) GetType(index int) Type {
	return Type(func() _Ctype_duk_int_t{ _cgo0 := /*line :563:29*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :563:55*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :563:63*/_Cfunc_duk_get_type(_cgo0, _cgo1); }())
}

// See: http://duktape.org/api.html#duk_get_type_mask
func (d *Context) GetTypeMask(index int) uint {
	return uint(func() _Ctype_duk_uint_t{ _cgo0 := /*line :568:34*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :568:60*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :568:68*/_Cfunc_duk_get_type_mask(_cgo0, _cgo1); }())
}

// See: http://duktape.org/api.html#duk_get_uint
func (d *Context) GetUint(index int) uint {
	return uint(func() _Ctype_duk_uint_t{ _cgo0 := /*line :573:29*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :573:55*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :573:63*/_Cfunc_duk_get_uint(_cgo0, _cgo1); }())
}

// See: http://duktape.org/api.html#duk_has_prop
func (d *Context) HasProp(objIndex int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :578:28*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :578:54*/(objIndex); _cgoCheckPointer(_cgo0, nil); return /*line :578:65*/_Cfunc_duk_has_prop(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_has_prop_index
func (d *Context) HasPropIndex(objIndex int, arrIndex uint) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :583:34*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :583:60*/(objIndex); var _cgo2 _Ctype_duk_uarridx_t = _Ctype_duk_uarridx_t /*line :583:87*/(arrIndex); _cgoCheckPointer(_cgo0, nil); return /*line :583:98*/_Cfunc_duk_has_prop_index(_cgo0, _cgo1, _cgo2); }()) == 1
}

// See: http://duktape.org/api.html#duk_has_prop_string
func (d *Context) HasPropString(objIndex int, key string) bool {
	__key__ := ( /*line :588:13*/_Cfunc_CString /*line :588:21*/)(key)
	result := int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :589:38*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :589:64*/(objIndex); var _cgo2 *_Ctype_char = /*line :589:76*/__key__; _cgoCheckPointer(_cgo0, nil); return /*line :589:84*/_Cfunc_duk_has_prop_string(_cgo0, _cgo1, _cgo2); }()) == 1
	func() { _cgo0 := /*line :590:9*/unsafe.Pointer(__key__); _cgoCheckPointer(_cgo0, nil); /*line :590:33*/_Cfunc_free(_cgo0); }()
	return result
}

// See: http://duktape.org/api.html#duk_hex_decode
func (d *Context) HexDecode(index int) {
	func() { _cgo0 := /*line :596:19*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :596:45*/(index); _cgoCheckPointer(_cgo0, nil); /*line :596:53*/_Cfunc_duk_hex_decode(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_hex_encode
func (d *Context) HexEncode(index int) string {
	if s := func() *_Ctype_char{ _cgo0 := /*line :601:27*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :601:53*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :601:61*/_Cfunc_duk_hex_encode(_cgo0, _cgo1); }(); s != nil {
		return ( /*line :602:10*/_Cfunc_GoString /*line :602:19*/)(s)
	}
	return ""
}

// See: http://duktape.org/api.html#duk_insert
func (d *Context) Insert(toIndex int) {
	func() { _cgo0 := /*line :609:15*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :609:41*/(toIndex); _cgoCheckPointer(_cgo0, nil); /*line :609:51*/_Cfunc_duk_insert(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_is_array
func (d *Context) IsArray(index int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :614:28*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :614:54*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :614:62*/_Cfunc_duk_is_array(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_is_boolean
func (d *Context) IsBoolean(index int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :619:30*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :619:56*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :619:64*/_Cfunc_duk_is_boolean(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_is_bound_function
func (d *Context) IsBoundFunction(index int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :624:37*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :624:63*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :624:71*/_Cfunc_duk_is_bound_function(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_is_buffer
func (d *Context) IsBuffer(index int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :629:29*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :629:55*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :629:63*/_Cfunc_duk_is_buffer(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_is_c_function
func (d *Context) IsCFunction(index int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :634:33*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :634:59*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :634:67*/_Cfunc_duk_is_c_function(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_is_callable
func (d *Context) IsCallable(index int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :639:31*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :639:57*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :639:65*/_Cfunc_duk_is_function(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_is_constructor_call
func (d *Context) IsConstructorCall() bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :644:39*/d.duk_context; _cgoCheckPointer(_cgo0, nil); return /*line :644:53*/_Cfunc_duk_is_constructor_call(_cgo0); }()) == 1
}

// See: http://duktape.org/api.html#duk_is_dynamic_buffer
func (d *Context) IsDynamicBuffer(index int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :649:37*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :649:63*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :649:71*/_Cfunc_duk_is_dynamic_buffer(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_is_ecmascript_function
func (d *Context) IsEcmascriptFunction(index int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :654:42*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :654:68*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :654:76*/_Cfunc_duk_is_ecmascript_function(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_is_fixed_buffer
func (d *Context) IsFixedBuffer(index int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :659:35*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :659:61*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :659:69*/_Cfunc_duk_is_fixed_buffer(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_is_function
func (d *Context) IsFunction(index int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :664:31*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :664:57*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :664:65*/_Cfunc_duk_is_function(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_is_nan
func (d *Context) IsNan(index int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :669:26*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :669:52*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :669:60*/_Cfunc_duk_is_nan(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_is_null
func (d *Context) IsNull(index int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :674:27*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :674:53*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :674:61*/_Cfunc_duk_is_null(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_is_null_or_undefined
func (d *Context) IsNullOrUndefined(index int) bool {
	return d.IsNull(index) || d.IsUndefined(index)
}

// See: http://duktape.org/api.html#duk_is_number
func (d *Context) IsNumber(index int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :684:29*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :684:55*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :684:63*/_Cfunc_duk_is_number(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_is_object
func (d *Context) IsObject(index int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :689:29*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :689:55*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :689:63*/_Cfunc_duk_is_object(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_is_error
func (d *Context) IsError(index int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :694:29*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :694:55*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :694:63*/_Cfunc__duk_is_error(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_is_object_coercible
func (d *Context) IsObjectCoercible(index int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :699:40*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :699:66*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :699:74*/_Cfunc__duk_is_object_coercible(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_is_pointer
func (d *Context) IsPointer(index int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :704:30*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :704:56*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :704:64*/_Cfunc_duk_is_pointer(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_is_primitive
func (d *Context) IsPrimitive(index int) bool {
	return int(func() _Ctype_duk_int_t{ _cgo0 := /*line :709:33*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :709:59*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :709:67*/_Cfunc__duk_is_primitive(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_is_strict_call
func (d *Context) IsStrictCall() bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :714:34*/d.duk_context; _cgoCheckPointer(_cgo0, nil); return /*line :714:48*/_Cfunc_duk_is_strict_call(_cgo0); }()) == 1
}

// See: http://duktape.org/api.html#duk_is_string
func (d *Context) IsString(index int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :719:29*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :719:55*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :719:63*/_Cfunc_duk_is_string(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_is_thread
func (d *Context) IsThread(index int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :724:29*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :724:55*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :724:63*/_Cfunc_duk_is_thread(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_is_undefined
func (d *Context) IsUndefined(index int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :729:32*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :729:58*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :729:66*/_Cfunc_duk_is_undefined(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_is_valid_index
func (d *Context) IsValidIndex(index int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :734:34*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :734:60*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :734:68*/_Cfunc_duk_is_valid_index(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_join
func (d *Context) Join(count int) {
	func() { _cgo0 := /*line :739:13*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :739:39*/(count); _cgoCheckPointer(_cgo0, nil); /*line :739:47*/_Cfunc_duk_join(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_json_decode
func (d *Context) JsonDecode(index int) {
	func() { _cgo0 := /*line :744:20*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :744:46*/(index); _cgoCheckPointer(_cgo0, nil); /*line :744:54*/_Cfunc_duk_json_decode(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_json_encode
func (d *Context) JsonEncode(index int) string {
	if s := func() *_Ctype_char{ _cgo0 := /*line :749:28*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :749:54*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :749:62*/_Cfunc_duk_json_encode(_cgo0, _cgo1); }(); s != nil {
		return ( /*line :750:10*/_Cfunc_GoString /*line :750:19*/)(s)
	}
	return ""
}

// See: http://duktape.org/api.html#duk_new
func (d *Context) New(nargs int) {
	func() { _cgo0 := /*line :757:12*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :757:38*/(nargs); _cgoCheckPointer(_cgo0, nil); /*line :757:46*/_Cfunc_duk_new(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_next
func (d *Context) Next(enumIndex int, getValue bool) bool {
	var __getValue__ int
	if getValue {
		__getValue__ = 1
	}
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :766:24*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :766:50*/(enumIndex); var _cgo2 _Ctype_duk_bool_t = _Ctype_duk_bool_t /*line :766:75*/(__getValue__); _cgoCheckPointer(_cgo0, nil); return /*line :766:90*/_Cfunc_duk_next(_cgo0, _cgo1, _cgo2); }()) == 1
}

// See: http://duktape.org/api.html#duk_normalize_index
func (d *Context) NormalizeIndex(index int) int {
	return int(func() _Ctype_duk_idx_t{ _cgo0 := /*line :771:35*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :771:61*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :771:69*/_Cfunc_duk_normalize_index(_cgo0, _cgo1); }())
}

// See: http://duktape.org/api.html#duk_pcall
func (d *Context) Pcall(nargs int) int {
	return int(func() _Ctype_duk_int_t{ _cgo0 := /*line :776:25*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :776:51*/(nargs); _cgoCheckPointer(_cgo0, nil); return /*line :776:59*/_Cfunc_duk_pcall(_cgo0, _cgo1); }())
}

// See: http://duktape.org/api.html#duk_pcall_method
func (d *Context) PcallMethod(nargs int) int {
	return int(func() _Ctype_duk_int_t{ _cgo0 := /*line :781:32*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :781:58*/(nargs); _cgoCheckPointer(_cgo0, nil); return /*line :781:66*/_Cfunc_duk_pcall_method(_cgo0, _cgo1); }())
}

// See: http://duktape.org/api.html#duk_pcall_prop
func (d *Context) PcallProp(objIndex int, nargs int) int {
	return int(func() _Ctype_duk_int_t{ _cgo0 := /*line :786:30*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :786:56*/(objIndex); var _cgo2 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :786:79*/(nargs); _cgoCheckPointer(_cgo0, nil); return /*line :786:87*/_Cfunc_duk_pcall_prop(_cgo0, _cgo1, _cgo2); }())
}

// See: http://duktape.org/api.html#duk_pcompile
func (d *Context) Pcompile(flags uint) error {
	result := int(func() _Ctype_duk_int_t{ _cgo0 := /*line :791:32*/d.duk_context; var _cgo1 _Ctype_duk_uint_t = _Ctype_duk_uint_t /*line :791:59*/(flags); _cgoCheckPointer(_cgo0, nil); return /*line :791:67*/_Cfunc__duk_pcompile(_cgo0, _cgo1); }())
	return d.castStringToError(result)
}

// See: http://duktape.org/api.html#duk_pcompile_file
func (d *Context) PcompileFile(flags uint, path string) error {
	__path__ := ( /*line :797:14*/_Cfunc_CString /*line :797:22*/)(path)
	result := int(func() _Ctype_duk_int_t{ _cgo0 := /*line :798:37*/d.duk_context; var _cgo1 _Ctype_duk_uint_t = _Ctype_duk_uint_t /*line :798:64*/(flags); var _cgo2 *_Ctype_char = /*line :798:73*/__path__; _cgoCheckPointer(_cgo0, nil); return /*line :798:82*/_Cfunc__duk_pcompile_file(_cgo0, _cgo1, _cgo2); }())
	func() { _cgo0 := /*line :799:9*/unsafe.Pointer(__path__); _cgoCheckPointer(_cgo0, nil); /*line :799:34*/_Cfunc_free(_cgo0); }()
	return d.castStringToError(result)
}

// See: http://duktape.org/api.html#duk_pcompile_lstring
func (d *Context) PcompileLstring(flags uint, src string, len int) error {
	__src__ := ( /*line :805:13*/_Cfunc_CString /*line :805:21*/)(src)
	result := int(func() _Ctype_duk_int_t{ _cgo0 := /*line :806:40*/d.duk_context; var _cgo1 _Ctype_duk_uint_t = _Ctype_duk_uint_t /*line :806:67*/(flags); var _cgo2 *_Ctype_char = /*line :806:76*/__src__; var _cgo3 _Ctype_duk_size_t = _Ctype_duk_size_t /*line :806:97*/(len); _cgoCheckPointer(_cgo0, nil); return /*line :806:103*/_Cfunc__duk_pcompile_lstring(_cgo0, _cgo1, _cgo2, _cgo3); }())
	func() { _cgo0 := /*line :807:9*/unsafe.Pointer(__src__); _cgoCheckPointer(_cgo0, nil); /*line :807:33*/_Cfunc_free(_cgo0); }()
	return d.castStringToError(result)
}

// See: http://duktape.org/api.html#duk_pcompile_lstring_filename
func (d *Context) PcompileLstringFilename(flags uint, src string, len int) error {
	__src__ := ( /*line :813:13*/_Cfunc_CString /*line :813:21*/)(src)
	result := int(func() _Ctype_duk_int_t{ _cgo0 := /*line :814:49*/d.duk_context; var _cgo1 _Ctype_duk_uint_t = _Ctype_duk_uint_t /*line :814:76*/(flags); var _cgo2 *_Ctype_char = /*line :814:85*/__src__; var _cgo3 _Ctype_duk_size_t = _Ctype_duk_size_t /*line :814:106*/(len); _cgoCheckPointer(_cgo0, nil); return /*line :814:112*/_Cfunc__duk_pcompile_lstring_filename(_cgo0, _cgo1, _cgo2, _cgo3); }())
	func() { _cgo0 := /*line :815:9*/unsafe.Pointer(__src__); _cgoCheckPointer(_cgo0, nil); /*line :815:33*/_Cfunc_free(_cgo0); }()
	return d.castStringToError(result)
}

// See: http://duktape.org/api.html#duk_pcompile_string
func (d *Context) PcompileString(flags uint, src string) error {
	__src__ := ( /*line :821:13*/_Cfunc_CString /*line :821:21*/)(src)
	result := int(func() _Ctype_duk_int_t{ _cgo0 := /*line :822:39*/d.duk_context; var _cgo1 _Ctype_duk_uint_t = _Ctype_duk_uint_t /*line :822:66*/(flags); var _cgo2 *_Ctype_char = /*line :822:75*/__src__; _cgoCheckPointer(_cgo0, nil); return /*line :822:83*/_Cfunc__duk_pcompile_string(_cgo0, _cgo1, _cgo2); }())
	func() { _cgo0 := /*line :823:9*/unsafe.Pointer(__src__); _cgoCheckPointer(_cgo0, nil); /*line :823:33*/_Cfunc_free(_cgo0); }()
	fmt.Println("result herhehreh", result)
	return nil //d.castStringToError(result)
}

// See: http://duktape.org/api.html#duk_pcompile_string_filename
func (d *Context) PcompileStringFilename(flags uint, src string) error {
	__src__ := ( /*line :830:13*/_Cfunc_CString /*line :830:21*/)(src)
	result := int(func() _Ctype_duk_int_t{ _cgo0 := /*line :831:48*/d.duk_context; var _cgo1 _Ctype_duk_uint_t = _Ctype_duk_uint_t /*line :831:75*/(flags); var _cgo2 *_Ctype_char = /*line :831:84*/__src__; _cgoCheckPointer(_cgo0, nil); return /*line :831:92*/_Cfunc__duk_pcompile_string_filename(_cgo0, _cgo1, _cgo2); }())
	func() { _cgo0 := /*line :832:9*/unsafe.Pointer(__src__); _cgoCheckPointer(_cgo0, nil); /*line :832:33*/_Cfunc_free(_cgo0); }()
	return d.castStringToError(result)
}

// See: http://duktape.org/api.html#duk_peval
func (d *Context) Peval() error {
	result := int(func() _Ctype_duk_int_t{ _cgo0 := /*line :838:29*/d.duk_context; _cgoCheckPointer(_cgo0, nil); return /*line :838:43*/_Cfunc__duk_peval(_cgo0); }())
	return d.castStringToError(result)
}

// See: http://duktape.org/api.html#duk_peval_file
func (d *Context) PevalFile(path string) error {
	__path__ := ( /*line :844:14*/_Cfunc_CString /*line :844:22*/)(path)
	result := int(func() _Ctype_duk_int_t{ _cgo0 := /*line :845:34*/d.duk_context; var _cgo1 *_Ctype_char = /*line :845:49*/__path__; _cgoCheckPointer(_cgo0, nil); return /*line :845:58*/_Cfunc__duk_peval_file(_cgo0, _cgo1); }())
	func() { _cgo0 := /*line :846:9*/unsafe.Pointer(__path__); _cgoCheckPointer(_cgo0, nil); /*line :846:34*/_Cfunc_free(_cgo0); }()
	return d.castStringToError(result)
}

// See: http://duktape.org/api.html#duk_peval_file_noresult
func (d *Context) PevalFileNoresult(path string) int {
	__path__ := ( /*line :852:14*/_Cfunc_CString /*line :852:22*/)(path)
	result := int(func() _Ctype_duk_int_t{ _cgo0 := /*line :853:43*/d.duk_context; var _cgo1 *_Ctype_char = /*line :853:58*/__path__; _cgoCheckPointer(_cgo0, nil); return /*line :853:67*/_Cfunc__duk_peval_file_noresult(_cgo0, _cgo1); }())
	func() { _cgo0 := /*line :854:9*/unsafe.Pointer(__path__); _cgoCheckPointer(_cgo0, nil); /*line :854:34*/_Cfunc_free(_cgo0); }()
	return result
}

// See: http://duktape.org/api.html#duk_peval_lstring
func (d *Context) PevalLstring(src string, len int) error {
	__src__ := ( /*line :860:13*/_Cfunc_CString /*line :860:21*/)(src)
	result := int(func() _Ctype_duk_int_t{ _cgo0 := /*line :861:37*/d.duk_context; var _cgo1 *_Ctype_char = /*line :861:52*/__src__; var _cgo2 _Ctype_duk_size_t = _Ctype_duk_size_t /*line :861:73*/(len); _cgoCheckPointer(_cgo0, nil); return /*line :861:79*/_Cfunc__duk_peval_lstring(_cgo0, _cgo1, _cgo2); }())
	func() { _cgo0 := /*line :862:9*/unsafe.Pointer(__src__); _cgoCheckPointer(_cgo0, nil); /*line :862:33*/_Cfunc_free(_cgo0); }()
	return d.castStringToError(result)

}

// See: http://duktape.org/api.html#duk_peval_lstring_noresult
func (d *Context) PevalLstringNoresult(src string, len int) int {
	__src__ := ( /*line :869:13*/_Cfunc_CString /*line :869:21*/)(src)
	result := int(func() _Ctype_duk_int_t{ _cgo0 := /*line :870:46*/d.duk_context; var _cgo1 *_Ctype_char = /*line :870:61*/__src__; var _cgo2 _Ctype_duk_size_t = _Ctype_duk_size_t /*line :870:82*/(len); _cgoCheckPointer(_cgo0, nil); return /*line :870:88*/_Cfunc__duk_peval_lstring_noresult(_cgo0, _cgo1, _cgo2); }())
	func() { _cgo0 := /*line :871:9*/unsafe.Pointer(__src__); _cgoCheckPointer(_cgo0, nil); /*line :871:33*/_Cfunc_free(_cgo0); }()
	return result
}

// See: http://duktape.org/api.html#duk_peval_noresult
func (d *Context) PevalNoresult() int {
	return int(func() _Ctype_duk_int_t{ _cgo0 := /*line :877:35*/d.duk_context; _cgoCheckPointer(_cgo0, nil); return /*line :877:49*/_Cfunc__duk_peval_noresult(_cgo0); }())
}

// See: http://duktape.org/api.html#duk_peval_string
func (d *Context) PevalString(src string) error {
	__src__ := ( /*line :882:13*/_Cfunc_CString /*line :882:21*/)(src)
	result := int(func() _Ctype_duk_int_t{ _cgo0 := /*line :883:36*/d.duk_context; var _cgo1 *_Ctype_char = /*line :883:51*/__src__; _cgoCheckPointer(_cgo0, nil); return /*line :883:59*/_Cfunc__duk_peval_string(_cgo0, _cgo1); }())
	func() { _cgo0 := /*line :884:9*/unsafe.Pointer(__src__); _cgoCheckPointer(_cgo0, nil); /*line :884:33*/_Cfunc_free(_cgo0); }()
	return d.castStringToError(result)
}

// See: http://duktape.org/api.html#duk_peval_string_noresult
func (d *Context) PevalStringNoresult(src string) int {
	__src__ := ( /*line :890:13*/_Cfunc_CString /*line :890:21*/)(src)
	result := int(func() _Ctype_duk_int_t{ _cgo0 := /*line :891:45*/d.duk_context; var _cgo1 *_Ctype_char = /*line :891:60*/__src__; _cgoCheckPointer(_cgo0, nil); return /*line :891:68*/_Cfunc__duk_peval_string_noresult(_cgo0, _cgo1); }())
	func() { _cgo0 := /*line :892:9*/unsafe.Pointer(__src__); _cgoCheckPointer(_cgo0, nil); /*line :892:33*/_Cfunc_free(_cgo0); }()
	return result
}

func (d *Context) castStringToError(result int) error {
	if result == 0 {
		return nil
	}

	err := &Error{}
	for _, key := range []string{"name", "message", "fileName", "lineNumber", "stack"} {
		d.GetPropString(-1, key)

		switch key {
		case "name":
			err.Type = d.SafeToString(-1)
		case "message":
			err.Message = d.SafeToString(-1)
		case "fileName":
			err.FileName = d.SafeToString(-1)
		case "lineNumber":
			if d.IsNumber(-1) {
				err.LineNumber = d.GetInt(-1)
			}
		case "stack":
			err.Stack = d.SafeToString(-1)
		}

		d.Pop()
	}

	return err
}

// See: http://duktape.org/api.html#duk_pop
func (d *Context) Pop() {
	if d.GetTop() == 0 {
		return
	}
	func() { _cgo0 := /*line :931:12*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :931:26*/_Cfunc_duk_pop(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_pop_2
func (d *Context) Pop2() {
	d.PopN(2)
}

// See: http://duktape.org/api.html#duk_pop_3
func (d *Context) Pop3() {
	d.PopN(3)
}

// See: http://duktape.org/api.html#duk_pop_n
func (d *Context) PopN(count int) {
	if d.GetTop() < count || count < 1 {
		return
	}
	func() { _cgo0 := /*line :949:14*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :949:40*/(count); _cgoCheckPointer(_cgo0, nil); /*line :949:48*/_Cfunc_duk_pop_n(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_push_array
func (d *Context) PushArray() int {
	return int(func() _Ctype_duk_idx_t{ _cgo0 := /*line :954:30*/d.duk_context; _cgoCheckPointer(_cgo0, nil); return /*line :954:44*/_Cfunc_duk_push_array(_cgo0); }())
}

// See: http://duktape.org/api.html#duk_push_boolean
func (d *Context) PushBoolean(val bool) {
	var __val__ int
	if val {
		__val__ = 1
	}
	func() { _cgo0 := /*line :963:21*/d.duk_context; var _cgo1 _Ctype_duk_bool_t = _Ctype_duk_bool_t /*line :963:48*/(__val__); _cgoCheckPointer(_cgo0, nil); /*line :963:58*/_Cfunc_duk_push_boolean(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_push_buffer
func (d *Context) PushBuffer(size int, dynamic bool) unsafe.Pointer {
	var __dynamic__ int
	if dynamic {
		__dynamic__ = 1
	}
	return func() _cgo_unsafe.Pointer{ _cgo0 := /*line :972:28*/d.duk_context; var _cgo1 _Ctype_duk_size_t = _Ctype_duk_size_t /*line :972:55*/(size); var _cgo2 _Ctype_duk_bool_t = _Ctype_duk_bool_t /*line :972:75*/(__dynamic__); _cgoCheckPointer(_cgo0, nil); return /*line :972:89*/_Cfunc__duk_push_buffer(_cgo0, _cgo1, _cgo2); }()
}

// See: http://duktape.org/api.html#duk_push_c_function
func (d *Context) PushCFunction(fn *[0]byte, nargs int64) int {
	return int(func() _Ctype_duk_idx_t{ _cgo0 := /*line :977:35*/d.duk_context; var _cgo1 *[0]byte = /*line :977:50*/fn; var _cgo2 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :977:65*/(nargs); _cgoCheckPointer(_cgo0, nil); return /*line :977:73*/_Cfunc_duk_push_c_function(_cgo0, _cgo1, _cgo2); }())
}

// See: http://duktape.org/api.html#duk_push_context_dump
func (d *Context) PushContextDump() {
	func() { _cgo0 := /*line :982:26*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :982:40*/_Cfunc_duk_push_context_dump(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_push_current_function
func (d *Context) PushCurrentFunction() {
	func() { _cgo0 := /*line :987:30*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :987:44*/_Cfunc_duk_push_current_function(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_push_current_thread
func (d *Context) PushCurrentThread() {
	func() { _cgo0 := /*line :992:28*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :992:42*/_Cfunc_duk_push_current_thread(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_push_dynamic_buffer
func (d *Context) PushDynamicBuffer(size int) unsafe.Pointer {
	return func() _cgo_unsafe.Pointer{ _cgo0 := /*line :997:36*/d.duk_context; var _cgo1 _Ctype_duk_size_t = _Ctype_duk_size_t /*line :997:63*/(size); _cgoCheckPointer(_cgo0, nil); return /*line :997:70*/_Cfunc__duk_push_dynamic_buffer(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_push_error_object
func (d *Context) PushErrorObject(errCode int, format string, value interface{}) {
	__str__ := ( /*line :1002:13*/_Cfunc_CString /*line :1002:21*/)(fmt.Sprintf(format, value))
	func() { _cgo0 := /*line :1003:27*/d.duk_context; var _cgo1 _Ctype_duk_errcode_t = _Ctype_duk_errcode_t /*line :1003:57*/(errCode); var _cgo2 *_Ctype_char = /*line :1003:68*/__str__; _cgoCheckPointer(_cgo0, nil); /*line :1003:76*/_Cfunc__duk_push_error_object(_cgo0, _cgo1, _cgo2); }()
	func() { _cgo0 := /*line :1004:9*/unsafe.Pointer(__str__); _cgoCheckPointer(_cgo0, nil); /*line :1004:33*/_Cfunc_free(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_push_false
func (d *Context) PushFalse() {
	func() { _cgo0 := /*line :1009:19*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :1009:33*/_Cfunc_duk_push_false(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_push_fixed_buffer
func (d *Context) PushFixedBuffer(size int) unsafe.Pointer {
	return func() _cgo_unsafe.Pointer{ _cgo0 := /*line :1014:34*/d.duk_context; var _cgo1 _Ctype_duk_size_t = _Ctype_duk_size_t /*line :1014:61*/(size); _cgoCheckPointer(_cgo0, nil); return /*line :1014:68*/_Cfunc__duk_push_fixed_buffer(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_push_global_object
func (d *Context) PushGlobalObject() {
	func() { _cgo0 := /*line :1019:27*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :1019:41*/_Cfunc_duk_push_global_object(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_push_global_stash
func (d *Context) PushGlobalStash() {
	func() { _cgo0 := /*line :1024:26*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :1024:40*/_Cfunc_duk_push_global_stash(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_push_heapptr
func (d *Context) PushHeapptr(ptr unsafe.Pointer) {
	func() _Ctype_duk_idx_t{ _cgo0 := /*line :1029:21*/d.duk_context; _cgo1 := /*line :1029:36*/ptr; _cgoCheckPointer(_cgo0, nil); _cgoCheckPointer(_cgo1, nil); return /*line :1029:40*/_Cfunc_duk_push_heapptr(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_push_heap_stash
func (d *Context) PushHeapStash() {
	func() { _cgo0 := /*line :1034:24*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :1034:38*/_Cfunc_duk_push_heap_stash(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_push_int
func (d *Context) PushInt(val int) {
	func() { _cgo0 := /*line :1039:17*/d.duk_context; var _cgo1 _Ctype_duk_int_t = _Ctype_duk_int_t /*line :1039:43*/(val); _cgoCheckPointer(_cgo0, nil); /*line :1039:49*/_Cfunc_duk_push_int(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_push_lstring
func (d *Context) PushLstring(str string, len int) string {
	__str__ := ( /*line :1044:13*/_Cfunc_CString /*line :1044:21*/)(str)
	var result string
	if s := func() *_Ctype_char{ _cgo0 := /*line :1046:29*/d.duk_context; var _cgo1 *_Ctype_char = /*line :1046:44*/__str__; var _cgo2 _Ctype_duk_size_t = _Ctype_duk_size_t /*line :1046:65*/(len); _cgoCheckPointer(_cgo0, nil); return /*line :1046:71*/_Cfunc_duk_push_lstring(_cgo0, _cgo1, _cgo2); }(); s != nil {
		result = ( /*line :1047:12*/_Cfunc_GoString /*line :1047:21*/)(s)
	}
	func() { _cgo0 := /*line :1049:9*/unsafe.Pointer(__str__); _cgoCheckPointer(_cgo0, nil); /*line :1049:33*/_Cfunc_free(_cgo0); }()
	return result
}

// See: http://duktape.org/api.html#duk_push_nan
func (d *Context) PushNan() {
	func() { _cgo0 := /*line :1055:17*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :1055:31*/_Cfunc_duk_push_nan(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_push_null
func (d *Context) PushNull() {
	func() { _cgo0 := /*line :1060:18*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :1060:32*/_Cfunc_duk_push_null(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_push_number
func (d *Context) PushNumber(val float64) {
	func() { _cgo0 := /*line :1065:20*/d.duk_context; var _cgo1 _Ctype_duk_double_t = _Ctype_duk_double_t /*line :1065:49*/(val); _cgoCheckPointer(_cgo0, nil); /*line :1065:55*/_Cfunc_duk_push_number(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_push_object
func (d *Context) PushObject() int {
	return int(func() _Ctype_duk_idx_t{ _cgo0 := /*line :1070:31*/d.duk_context; _cgoCheckPointer(_cgo0, nil); return /*line :1070:45*/_Cfunc_duk_push_object(_cgo0); }())
}

// See: http://duktape.org/api.html#duk_push_string
func (d *Context) PushString(str string) string {
	__str__ := ( /*line :1075:13*/_Cfunc_CString /*line :1075:21*/)(str)
	var result string
	if s := func() *_Ctype_char{ _cgo0 := /*line :1077:28*/d.duk_context; var _cgo1 *_Ctype_char = /*line :1077:43*/__str__; _cgoCheckPointer(_cgo0, nil); return /*line :1077:51*/_Cfunc_duk_push_string(_cgo0, _cgo1); }(); s != nil {
		result = ( /*line :1078:12*/_Cfunc_GoString /*line :1078:21*/)(s)
	}
	func() { _cgo0 := /*line :1080:9*/unsafe.Pointer(__str__); _cgoCheckPointer(_cgo0, nil); /*line :1080:33*/_Cfunc_free(_cgo0); }()
	return result
}

// See: http://duktape.org/api.html#duk_push_string_file
func (d *Context) PushStringFile(path string) string {
	__path__ := ( /*line :1086:14*/_Cfunc_CString /*line :1086:22*/)(path)
	var result string
	if s := func() *_Ctype_char{ _cgo0 := /*line :1088:34*/d.duk_context; var _cgo1 *_Ctype_char = /*line :1088:49*/__path__; _cgoCheckPointer(_cgo0, nil); return /*line :1088:58*/_Cfunc__duk_push_string_file(_cgo0, _cgo1); }(); s != nil {
		result = ( /*line :1089:12*/_Cfunc_GoString /*line :1089:21*/)(s)
	}
	func() { _cgo0 := /*line :1091:9*/unsafe.Pointer(__path__); _cgoCheckPointer(_cgo0, nil); /*line :1091:34*/_Cfunc_free(_cgo0); }()
	return result
}

// See: http://duktape.org/api.html#duk_push_this
func (d *Context) PushThis() {
	func() { _cgo0 := /*line :1097:18*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :1097:32*/_Cfunc_duk_push_this(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_push_thread
func (d *Context) PushThread() int {
	return int(func() _Ctype_duk_idx_t{ _cgo0 := /*line :1102:32*/d.duk_context; _cgoCheckPointer(_cgo0, nil); return /*line :1102:46*/_Cfunc__duk_push_thread(_cgo0); }())
}

// See: http://duktape.org/api.html#duk_push_thread_new_globalenv
func (d *Context) PushThreadNewGlobalenv() int {
	return int(func() _Ctype_duk_idx_t{ _cgo0 := /*line :1107:46*/d.duk_context; _cgoCheckPointer(_cgo0, nil); return /*line :1107:60*/_Cfunc__duk_push_thread_new_globalenv(_cgo0); }())
}

// See: http://duktape.org/api.html#duk_push_thread_stash
func (d *Context) PushThreadStash(targetCtx *Context) {
	func() { _cgo0 := /*line :1112:26*/d.duk_context; _cgo1 := /*line :1112:41*/targetCtx.duk_context; _cgoCheckPointer(_cgo0, nil); _cgoCheckPointer(_cgo1, nil); /*line :1112:63*/_Cfunc_duk_push_thread_stash(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_push_true
func (d *Context) PushTrue() {
	func() { _cgo0 := /*line :1117:18*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :1117:32*/_Cfunc_duk_push_true(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_push_uint
func (d *Context) PushUint(val uint) {
	func() { _cgo0 := /*line :1122:18*/d.duk_context; var _cgo1 _Ctype_duk_uint_t = _Ctype_duk_uint_t /*line :1122:45*/(val); _cgoCheckPointer(_cgo0, nil); /*line :1122:51*/_Cfunc_duk_push_uint(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_push_undefined
func (d *Context) PushUndefined() {
	func() { _cgo0 := /*line :1127:23*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :1127:37*/_Cfunc_duk_push_undefined(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_put_global_string
func (d *Context) PutGlobalString(key string) bool {
	__key__ := ( /*line :1132:13*/_Cfunc_CString /*line :1132:21*/)(key)
	result := int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :1133:40*/d.duk_context; var _cgo1 *_Ctype_char = /*line :1133:55*/__key__; _cgoCheckPointer(_cgo0, nil); return /*line :1133:63*/_Cfunc_duk_put_global_string(_cgo0, _cgo1); }()) == 1
	func() { _cgo0 := /*line :1134:9*/unsafe.Pointer(__key__); _cgoCheckPointer(_cgo0, nil); /*line :1134:33*/_Cfunc_free(_cgo0); }()
	return result
}

// See: http://duktape.org/api.html#duk_put_prop
func (d *Context) PutProp(objIndex int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :1140:28*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1140:54*/(objIndex); _cgoCheckPointer(_cgo0, nil); return /*line :1140:65*/_Cfunc_duk_put_prop(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_put_prop_index
func (d *Context) PutPropIndex(objIndex int, arrIndex uint) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :1145:34*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1145:60*/(objIndex); var _cgo2 _Ctype_duk_uarridx_t = _Ctype_duk_uarridx_t /*line :1145:87*/(arrIndex); _cgoCheckPointer(_cgo0, nil); return /*line :1145:98*/_Cfunc_duk_put_prop_index(_cgo0, _cgo1, _cgo2); }()) == 1
}

// See: http://duktape.org/api.html#duk_put_prop_string
func (d *Context) PutPropString(objIndex int, key string) bool {
	__key__ := ( /*line :1150:13*/_Cfunc_CString /*line :1150:21*/)(key)
	result := int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :1151:38*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1151:64*/(objIndex); var _cgo2 *_Ctype_char = /*line :1151:76*/__key__; _cgoCheckPointer(_cgo0, nil); return /*line :1151:84*/_Cfunc_duk_put_prop_string(_cgo0, _cgo1, _cgo2); }()) == 1
	func() { _cgo0 := /*line :1152:9*/unsafe.Pointer(__key__); _cgoCheckPointer(_cgo0, nil); /*line :1152:33*/_Cfunc_free(_cgo0); }()
	return result
}

// See: http://duktape.org/api.html#duk_remove
func (d *Context) Remove(index int) {
	func() { _cgo0 := /*line :1158:15*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1158:41*/(index); _cgoCheckPointer(_cgo0, nil); /*line :1158:49*/_Cfunc_duk_remove(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_replace
func (d *Context) Replace(toIndex int) {
	func() { _cgo0 := /*line :1163:16*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1163:42*/(toIndex); _cgoCheckPointer(_cgo0, nil); /*line :1163:52*/_Cfunc_duk_replace(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_require_boolean
func (d *Context) RequireBoolean(index int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :1168:35*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1168:61*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :1168:69*/_Cfunc_duk_require_boolean(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_require_buffer
func (d *Context) RequireBuffer(index int) (rawPtr unsafe.Pointer, outSize uint) {
	rawPtr = func() _cgo_unsafe.Pointer{ _cgo0 := /*line :1173:32*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1173:58*/(index); var _cgo2 *_Ctype_duk_size_t = /*line :1173:67*/(*_Ctype_duk_size_t /*line :1173:81*/)(unsafe.Pointer(&outSize)); _cgoCheckPointer(_cgo0, nil); return /*line :1173:109*/_Cfunc_duk_require_buffer(_cgo0, _cgo1, _cgo2); }()
	return rawPtr, outSize
}

// See: http://duktape.org/api.html#duk_require_callable
func (d *Context) RequireCallable(index int) {
	// At present, duk_require_callable is a macro that just calls duk_require_function.
	// cgo does not support such macros we have to call it directly.
	func() { _cgo0 := /*line :1181:25*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1181:51*/(index); _cgoCheckPointer(_cgo0, nil); /*line :1181:59*/_Cfunc_duk_require_function(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_require_context
func (d *Context) RequireContext(index int) *Context {
	return contextFromPointer(func() *_Ctype_struct_duk_hthread{ _cgo0 := /*line :1186:50*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1186:76*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :1186:84*/_Cfunc_duk_require_context(_cgo0, _cgo1); }())
}

// See: http://duktape.org/api.html#duk_require_function
func (d *Context) RequireFunction(index int) {
	func() { _cgo0 := /*line :1191:25*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1191:51*/(index); _cgoCheckPointer(_cgo0, nil); /*line :1191:59*/_Cfunc_duk_require_function(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_require_heapptr
func (d *Context) RequireHeapptr(index int) unsafe.Pointer {
	return unsafe.Pointer(func() _cgo_unsafe.Pointer{ _cgo0 := /*line :1196:46*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1196:72*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :1196:80*/_Cfunc_duk_require_heapptr(_cgo0, _cgo1); }())
}

// See: http://duktape.org/api.html#duk_require_int
func (d *Context) RequireInt(index int) int {
	return int(func() _Ctype_duk_int_t{ _cgo0 := /*line :1201:31*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1201:57*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :1201:65*/_Cfunc_duk_require_int(_cgo0, _cgo1); }())
}

// See: http://duktape.org/api.html#duk_require_lstring
func (d *Context) RequireLstring(index int) string {
	if s := func() *_Ctype_char{ _cgo0 := /*line :1206:32*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1206:58*/(index); var _cgo2 *_Ctype_duk_size_t = /*line :1206:67*/nil; _cgoCheckPointer(_cgo0, nil); return /*line :1206:71*/_Cfunc_duk_require_lstring(_cgo0, _cgo1, _cgo2); }(); s != nil {
		return ( /*line :1207:10*/_Cfunc_GoString /*line :1207:19*/)(s)
	}
	return ""
}

// See: http://duktape.org/api.html#duk_require_normalize_index
func (d *Context) RequireNormalizeIndex(index int) int {
	return int(func() _Ctype_duk_idx_t{ _cgo0 := /*line :1214:43*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1214:69*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :1214:77*/_Cfunc_duk_require_normalize_index(_cgo0, _cgo1); }())
}

// See: http://duktape.org/api.html#duk_require_null
func (d *Context) RequireNull(index int) {
	func() { _cgo0 := /*line :1219:21*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1219:47*/(index); _cgoCheckPointer(_cgo0, nil); /*line :1219:55*/_Cfunc_duk_require_null(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_require_number
func (d *Context) RequireNumber(index int) float64 {
	return float64(func() _Ctype_duk_double_t{ _cgo0 := /*line :1224:38*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1224:64*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :1224:72*/_Cfunc_duk_require_number(_cgo0, _cgo1); }())
}

// See: http://duktape.org/api.html#duk_require_object_coercible
func (d *Context) RequireObjectCoercible(index int) {
	func() { _cgo0 := /*line :1229:34*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1229:60*/(index); _cgoCheckPointer(_cgo0, nil); /*line :1229:68*/_Cfunc__duk_require_object_coercible(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_require_pointer
func (d *Context) RequirePointer(index int) unsafe.Pointer {
	return func() _cgo_unsafe.Pointer{ _cgo0 := /*line :1234:31*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1234:57*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :1234:65*/_Cfunc_duk_require_pointer(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_require_stack
func (d *Context) RequireStack(extra int) {
	func() { _cgo0 := /*line :1239:22*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1239:48*/(extra); _cgoCheckPointer(_cgo0, nil); /*line :1239:56*/_Cfunc_duk_require_stack(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_require_stack_top
func (d *Context) RequireStackTop(top int) {
	func() { _cgo0 := /*line :1244:26*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1244:52*/(top); _cgoCheckPointer(_cgo0, nil); /*line :1244:58*/_Cfunc_duk_require_stack_top(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_require_string
func (d *Context) RequireString(index int) string {
	if s := func() *_Ctype_char{ _cgo0 := /*line :1249:31*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1249:57*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :1249:65*/_Cfunc_duk_require_string(_cgo0, _cgo1); }(); s != nil {
		return ( /*line :1250:10*/_Cfunc_GoString /*line :1250:19*/)(s)
	}
	return ""
}

// See: http://duktape.org/api.html#duk_require_top_index
func (d *Context) RequireTopIndex() int {
	return int(func() _Ctype_duk_idx_t{ _cgo0 := /*line :1257:37*/d.duk_context; _cgoCheckPointer(_cgo0, nil); return /*line :1257:51*/_Cfunc_duk_require_top_index(_cgo0); }())
}

// See: http://duktape.org/api.html#duk_require_type_mask
func (d *Context) RequireTypeMask(index int, mask uint) {
	func() { _cgo0 := /*line :1262:27*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1262:53*/(index); var _cgo2 _Ctype_duk_uint_t = _Ctype_duk_uint_t /*line :1262:74*/(mask); _cgoCheckPointer(_cgo0, nil); /*line :1262:81*/_Cfunc__duk_require_type_mask(_cgo0, _cgo1, _cgo2); }()
}

// See: http://duktape.org/api.html#duk_require_uint
func (d *Context) RequireUint(index int) uint {
	return uint(func() _Ctype_duk_uint_t{ _cgo0 := /*line :1267:33*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1267:59*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :1267:67*/_Cfunc_duk_require_uint(_cgo0, _cgo1); }())
}

// See: http://duktape.org/api.html#duk_require_undefined
func (d *Context) RequireUndefined(index int) {
	func() { _cgo0 := /*line :1272:26*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1272:52*/(index); _cgoCheckPointer(_cgo0, nil); /*line :1272:60*/_Cfunc_duk_require_undefined(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_require_valid_index
func (d *Context) RequireValidIndex(index int) {
	func() { _cgo0 := /*line :1277:28*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1277:54*/(index); _cgoCheckPointer(_cgo0, nil); /*line :1277:62*/_Cfunc_duk_require_valid_index(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_resize_buffer
func (d *Context) ResizeBuffer(index int, newSize int) unsafe.Pointer {
	return func() _cgo_unsafe.Pointer{ _cgo0 := /*line :1282:29*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1282:55*/(index); var _cgo2 _Ctype_duk_size_t = _Ctype_duk_size_t /*line :1282:76*/(newSize); _cgoCheckPointer(_cgo0, nil); return /*line :1282:86*/_Cfunc_duk_resize_buffer(_cgo0, _cgo1, _cgo2); }()
}

// See: http://duktape.org/api.html#duk_safe_call
func (d *Context) SafeCall(fn, args *[0]byte, nargs, nrets int) int {
	return int(func() _Ctype_duk_int_t{ _cgo0 := /*line :1288:3*/d.duk_context; var _cgo1 *[0]byte = /*line :1289:3*/fn; _cgoBase2 := /*line :1290:18*/&args; _cgo2 := /*line :1290:3*/unsafe.Pointer(_cgoBase2); var _cgo3 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1291:14*/(nargs); var _cgo4 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1292:14*/(nrets); _cgoCheckPointer(_cgo0, nil); _cgoCheckPointer(_cgoBase2, 0 == 0); return /*line :1293:3*/_Cfunc_duk_safe_call(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }())
}

// See: http://duktape.org/api.html#duk_safe_to_lstring
func (d *Context) SafeToLstring(index int) string {
	if s := func() *_Ctype_char{ _cgo0 := /*line :1298:32*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1298:58*/(index); var _cgo2 *_Ctype_duk_size_t = /*line :1298:67*/nil; _cgoCheckPointer(_cgo0, nil); return /*line :1298:71*/_Cfunc_duk_safe_to_lstring(_cgo0, _cgo1, _cgo2); }(); s != nil {
		return ( /*line :1299:10*/_Cfunc_GoString /*line :1299:19*/)(s)
	}
	return ""
}

// See: http://duktape.org/api.html#duk_safe_to_string
func (d *Context) SafeToString(index int) string {
	if s := func() *_Ctype_char{ _cgo0 := /*line :1306:32*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1306:58*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :1306:66*/_Cfunc__duk_safe_to_string(_cgo0, _cgo1); }(); s != nil {
		return ( /*line :1307:10*/_Cfunc_GoString /*line :1307:19*/)(s)
	}
	return ""
}

// See: http://duktape.org/api.html#duk_set_finalizer
func (d *Context) SetFinalizer(index int) {
	func() { _cgo0 := /*line :1314:22*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1314:48*/(index); _cgoCheckPointer(_cgo0, nil); /*line :1314:56*/_Cfunc_duk_set_finalizer(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_set_global_object
func (d *Context) SetGlobalObject() {
	func() { _cgo0 := /*line :1319:26*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :1319:40*/_Cfunc_duk_set_global_object(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_set_magic
func (d *Context) SetMagic(index int, magic int) {
	func() { _cgo0 := /*line :1324:18*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1324:44*/(index); var _cgo2 _Ctype_duk_int_t = _Ctype_duk_int_t /*line :1324:64*/(magic); _cgoCheckPointer(_cgo0, nil); /*line :1324:72*/_Cfunc_duk_set_magic(_cgo0, _cgo1, _cgo2); }()
}

// See: http://duktape.org/api.html#duk_set_prototype
func (d *Context) SetPrototype(index int) {
	func() { _cgo0 := /*line :1329:22*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1329:48*/(index); _cgoCheckPointer(_cgo0, nil); /*line :1329:56*/_Cfunc_duk_set_prototype(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_set_top
func (d *Context) SetTop(index int) {
	func() { _cgo0 := /*line :1334:16*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1334:42*/(index); _cgoCheckPointer(_cgo0, nil); /*line :1334:50*/_Cfunc_duk_set_top(_cgo0, _cgo1); }()
}

func (d *Context) StrictEquals(index1 int, index2 int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :1338:33*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1338:59*/(index1); var _cgo2 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1338:80*/(index2); _cgoCheckPointer(_cgo0, nil); return /*line :1338:89*/_Cfunc_duk_strict_equals(_cgo0, _cgo1, _cgo2); }()) == 1
}

// See: http://duktape.org/api.html#duk_substring
func (d *Context) Substring(index int, startCharOffset int, endCharOffset int) {
	func() { _cgo0 := /*line :1343:18*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1343:44*/(index); var _cgo2 _Ctype_duk_size_t = _Ctype_duk_size_t /*line :1343:65*/(startCharOffset); var _cgo3 _Ctype_duk_size_t = _Ctype_duk_size_t /*line :1343:96*/(endCharOffset); _cgoCheckPointer(_cgo0, nil); /*line :1343:112*/_Cfunc_duk_substring(_cgo0, _cgo1, _cgo2, _cgo3); }()
}

// See: http://duktape.org/api.html#duk_swap
func (d *Context) Swap(index1 int, index2 int) {
	func() { _cgo0 := /*line :1348:13*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1348:39*/(index1); var _cgo2 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1348:60*/(index2); _cgoCheckPointer(_cgo0, nil); /*line :1348:69*/_Cfunc_duk_swap(_cgo0, _cgo1, _cgo2); }()
}

// See: http://duktape.org/api.html#duk_swap_top
func (d *Context) SwapTop(index int) {
	func() { _cgo0 := /*line :1353:17*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1353:43*/(index); _cgoCheckPointer(_cgo0, nil); /*line :1353:51*/_Cfunc_duk_swap_top(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_throw
func (d *Context) Throw() {
	func() { _cgo0 := /*line :1358:18*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :1358:32*/_Cfunc_duk_throw_raw(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_to_boolean
func (d *Context) ToBoolean(index int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :1363:30*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1363:56*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :1363:64*/_Cfunc_duk_to_boolean(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_to_buffer
func (d *Context) ToBuffer(index int) (rawPtr unsafe.Pointer, outSize uint) {
	rawPtr = func() _cgo_unsafe.Pointer{ _cgo0 := /*line :1368:28*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1368:54*/(index); var _cgo2 *_Ctype_duk_size_t = /*line :1368:63*/(*_Ctype_duk_size_t /*line :1368:77*/)(unsafe.Pointer(&outSize)); _cgoCheckPointer(_cgo0, nil); return /*line :1368:105*/_Cfunc__duk_to_buffer(_cgo0, _cgo1, _cgo2); }()
	return rawPtr, outSize
}

// See: http://duktape.org/api.html#duk_to_defaultvalue
func (d *Context) ToDefaultvalue(index int, hint int) {
	func() { _cgo0 := /*line :1374:24*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1374:50*/(index); var _cgo2 _Ctype_duk_int_t = _Ctype_duk_int_t /*line :1374:70*/(hint); _cgoCheckPointer(_cgo0, nil); /*line :1374:77*/_Cfunc_duk_to_defaultvalue(_cgo0, _cgo1, _cgo2); }()
}

// See: http://duktape.org/api.html#duk_to_dynamic_buffer
func (d *Context) ToDynamicBuffer(index int) (rawPtr unsafe.Pointer, outSize uint) {
	rawPtr = func() _cgo_unsafe.Pointer{ _cgo0 := /*line :1379:36*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1379:62*/(index); var _cgo2 *_Ctype_duk_size_t = /*line :1379:71*/(*_Ctype_duk_size_t /*line :1379:85*/)(unsafe.Pointer(&outSize)); _cgoCheckPointer(_cgo0, nil); return /*line :1379:113*/_Cfunc__duk_to_dynamic_buffer(_cgo0, _cgo1, _cgo2); }()
	return rawPtr, outSize
}

// See: http://duktape.org/api.html#duk_to_fixed_buffer
func (d *Context) ToFixedBuffer(index int) (rawPtr unsafe.Pointer, outSize uint) {
	rawPtr = func() _cgo_unsafe.Pointer{ _cgo0 := /*line :1385:34*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1385:60*/(index); var _cgo2 *_Ctype_duk_size_t = /*line :1385:69*/(*_Ctype_duk_size_t /*line :1385:83*/)(unsafe.Pointer(&outSize)); _cgoCheckPointer(_cgo0, nil); return /*line :1385:111*/_Cfunc__duk_to_fixed_buffer(_cgo0, _cgo1, _cgo2); }()
	return rawPtr, outSize
}

// See: http://duktape.org/api.html#duk_to_int
func (d *Context) ToInt(index int) int {
	return int(func() _Ctype_duk_int_t{ _cgo0 := /*line :1391:26*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1391:52*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :1391:60*/_Cfunc_duk_to_int(_cgo0, _cgo1); }())
}

// See: http://duktape.org/api.html#duk_to_int32
func (d *Context) ToInt32(index int) int32 {
	return int32(func() _Ctype_duk_int32_t{ _cgo0 := /*line :1396:30*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1396:56*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :1396:64*/_Cfunc_duk_to_int32(_cgo0, _cgo1); }())
}

// See: http://duktape.org/api.html#duk_to_lstring
func (d *Context) ToLstring(index int) string {
	if s := func() *_Ctype_char{ _cgo0 := /*line :1401:27*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1401:53*/(index); var _cgo2 *_Ctype_duk_size_t = /*line :1401:62*/nil; _cgoCheckPointer(_cgo0, nil); return /*line :1401:66*/_Cfunc_duk_to_lstring(_cgo0, _cgo1, _cgo2); }(); s != nil {
		return ( /*line :1402:10*/_Cfunc_GoString /*line :1402:19*/)(s)
	}
	return ""
}

// See: http://duktape.org/api.html#duk_to_null
func (d *Context) ToNull(index int) {
	func() { _cgo0 := /*line :1409:16*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1409:42*/(index); _cgoCheckPointer(_cgo0, nil); /*line :1409:50*/_Cfunc_duk_to_null(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_to_number
func (d *Context) ToNumber(index int) float64 {
	return float64(func() _Ctype_duk_double_t{ _cgo0 := /*line :1414:33*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1414:59*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :1414:67*/_Cfunc_duk_to_number(_cgo0, _cgo1); }())
}

// See: http://duktape.org/api.html#duk_to_object
func (d *Context) ToObject(index int) {
	func() { _cgo0 := /*line :1419:18*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1419:44*/(index); _cgoCheckPointer(_cgo0, nil); /*line :1419:52*/_Cfunc_duk_to_object(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_to_pointer
func (d *Context) ToPointer(index int) unsafe.Pointer {
	return func() _cgo_unsafe.Pointer{ _cgo0 := /*line :1424:26*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1424:52*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :1424:60*/_Cfunc_duk_to_pointer(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_to_primitive
func (d *Context) ToPrimitive(index int, hint int) {
	func() { _cgo0 := /*line :1429:21*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1429:47*/(index); var _cgo2 _Ctype_duk_int_t = _Ctype_duk_int_t /*line :1429:67*/(hint); _cgoCheckPointer(_cgo0, nil); /*line :1429:74*/_Cfunc_duk_to_primitive(_cgo0, _cgo1, _cgo2); }()
}

// See: http://duktape.org/api.html#duk_to_string
func (d *Context) ToString(index int) string {
	if s := func() *_Ctype_char{ _cgo0 := /*line :1434:26*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1434:52*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :1434:60*/_Cfunc_duk_to_string(_cgo0, _cgo1); }(); s != nil {
		return ( /*line :1435:10*/_Cfunc_GoString /*line :1435:19*/)(s)
	}
	return ""
}

// See: http://duktape.org/api.html#duk_to_uint
func (d *Context) ToUint(index int) uint {
	return uint(func() _Ctype_duk_uint_t{ _cgo0 := /*line :1442:28*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1442:54*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :1442:62*/_Cfunc_duk_to_uint(_cgo0, _cgo1); }())
}

// See: http://duktape.org/api.html#duk_to_uint16
func (d *Context) ToUint16(index int) uint16 {
	return uint16(func() _Ctype_duk_uint16_t{ _cgo0 := /*line :1447:32*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1447:58*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :1447:66*/_Cfunc_duk_to_uint16(_cgo0, _cgo1); }())
}

// See: http://duktape.org/api.html#duk_to_uint32
func (d *Context) ToUint32(index int) uint32 {
	return uint32(func() _Ctype_duk_uint32_t{ _cgo0 := /*line :1452:32*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1452:58*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :1452:66*/_Cfunc_duk_to_uint32(_cgo0, _cgo1); }())
}

// See: http://duktape.org/api.html#duk_to_undefined
func (d *Context) ToUndefined(index int) {
	func() { _cgo0 := /*line :1457:21*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1457:47*/(index); _cgoCheckPointer(_cgo0, nil); /*line :1457:55*/_Cfunc_duk_to_undefined(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_trim
func (d *Context) Trim(index int) {
	func() { _cgo0 := /*line :1462:13*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1462:39*/(index); _cgoCheckPointer(_cgo0, nil); /*line :1462:47*/_Cfunc_duk_trim(_cgo0, _cgo1); }()
}

// See: http://duktape.org/api.html#duk_xcopy_top
func (d *Context) XcopyTop(fromCtx *Context, count int) {
	func() { _cgo0 := /*line :1467:19*/d.duk_context; _cgo1 := /*line :1467:34*/fromCtx.duk_context; var _cgo2 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1467:66*/(count); _cgoCheckPointer(_cgo0, nil); _cgoCheckPointer(_cgo1, nil); /*line :1467:74*/_Cfunc__duk_xcopy_top(_cgo0, _cgo1, _cgo2); }()
}

// See: http://duktape.org/api.html#duk_xmove_top
func (d *Context) XmoveTop(fromCtx *Context, count int) {
	func() { _cgo0 := /*line :1472:19*/d.duk_context; _cgo1 := /*line :1472:34*/fromCtx.duk_context; var _cgo2 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1472:66*/(count); _cgoCheckPointer(_cgo0, nil); _cgoCheckPointer(_cgo1, nil); /*line :1472:74*/_Cfunc__duk_xmove_top(_cgo0, _cgo1, _cgo2); }()
}

// See: http://duktape.org/api.html#duk_push_pointer
func (d *Context) PushPointer(p unsafe.Pointer) {
	func() { _cgo0 := /*line :1477:21*/d.duk_context; _cgo1 := /*line :1477:36*/p; _cgoCheckPointer(_cgo0, nil); _cgoCheckPointer(_cgo1, nil); /*line :1477:38*/_Cfunc_duk_push_pointer(_cgo0, _cgo1); }()
}

//---[ Duktape 1.3 API ]--- //
// See: http://duktape.org/api.html#duk_debugger_attach
func (d *Context) DebuggerAttach(
	readFn,
	writeFn,
	peekFn,
	readFlushFn,
	writeFlushFn,
	detachedFn *[0]byte,
	uData unsafe.Pointer) {
	func() { _cgo0 := /*line :1491:3*/d.duk_context; var _cgo1 *[0]byte = /*line :1492:3*/readFn; var _cgo2 *[0]byte = /*line :1493:3*/writeFn; var _cgo3 *[0]byte = /*line :1494:3*/peekFn; var _cgo4 *[0]byte = /*line :1495:3*/readFlushFn; var _cgo5 *[0]byte = /*line :1496:3*/writeFlushFn; var _cgo6 *[0]byte = /*line :1497:3*/nil; var _cgo7 *[0]byte = /*line :1498:3*/detachedFn; _cgo8 := /*line :1499:3*/uData; _cgoCheckPointer(_cgo0, nil); _cgoCheckPointer(_cgo8, nil); /*line :1500:3*/_Cfunc_duk_debugger_attach(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6, _cgo7, _cgo8); }()
}

// See: http://duktape.org/api.html#duk_debugger_cooperate
func (d *Context) DebuggerCooperate() {
	func() { _cgo0 := /*line :1505:27*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :1505:41*/_Cfunc_duk_debugger_cooperate(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_debugger_detach
func (d *Context) DebuggerDetach() {
	func() { _cgo0 := /*line :1510:24*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :1510:38*/_Cfunc_duk_debugger_detach(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_dump_function
func (d *Context) DumpFunction() {
	func() { _cgo0 := /*line :1515:22*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :1515:36*/_Cfunc_duk_dump_function(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_error_va
func (d *Context) ErrorVa(errCode int, a ...interface{}) {
	str := fmt.Sprint(a...)
	d.Error(errCode, str)
}

// See: http://duktape.org/api.html#duk_instanceof
func (d *Context) Instanceof(idx1, idx2 int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :1526:30*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1526:56*/(idx1); var _cgo2 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1526:75*/(idx2); _cgoCheckPointer(_cgo0, nil); return /*line :1526:82*/_Cfunc_duk_instanceof(_cgo0, _cgo1, _cgo2); }()) == 1
}

// See: http://duktape.org/api.html#duk_is_lightfunc
func (d *Context) IsLightfunc(index int) bool {
	return int(func() _Ctype_duk_bool_t{ _cgo0 := /*line :1531:32*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1531:58*/(index); _cgoCheckPointer(_cgo0, nil); return /*line :1531:66*/_Cfunc_duk_is_lightfunc(_cgo0, _cgo1); }()) == 1
}

// See: http://duktape.org/api.html#duk_load_function
func (d *Context) LoadFunction() {
	func() { _cgo0 := /*line :1536:22*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :1536:36*/_Cfunc_duk_load_function(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_log
func (d *Context) Log(loglevel int, format string, value interface{}) {
	__str__ := ( /*line :1541:13*/_Cfunc_CString /*line :1541:21*/)(fmt.Sprintf(format, value))
	func() { _cgo0 := /*line :1542:13*/d.duk_context; var _cgo1 _Ctype_duk_int_t = _Ctype_duk_int_t /*line :1542:39*/(loglevel); var _cgo2 *_Ctype_char = /*line :1542:51*/__str__; _cgoCheckPointer(_cgo0, nil); /*line :1542:59*/_Cfunc__duk_log(_cgo0, _cgo1, _cgo2); }()
	func() { _cgo0 := /*line :1543:9*/unsafe.Pointer(__str__); _cgoCheckPointer(_cgo0, nil); /*line :1543:33*/_Cfunc_free(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_log_va
func (d *Context) LogVa(logLevel int, format string, values ...interface{}) {
	__str__ := ( /*line :1548:13*/_Cfunc_CString /*line :1548:21*/)(fmt.Sprintf(format, values...))
	func() { _cgo0 := /*line :1549:13*/d.duk_context; var _cgo1 _Ctype_duk_int_t = _Ctype_duk_int_t /*line :1549:39*/(logLevel); var _cgo2 *_Ctype_char = /*line :1549:51*/__str__; _cgoCheckPointer(_cgo0, nil); /*line :1549:59*/_Cfunc__duk_log(_cgo0, _cgo1, _cgo2); }()
	func() { _cgo0 := /*line :1550:9*/unsafe.Pointer(__str__); _cgoCheckPointer(_cgo0, nil); /*line :1550:33*/_Cfunc_free(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_pnew
func (d *Context) Pnew(nargs int) error {
	result := int(func() _Ctype_duk_int_t{ _cgo0 := /*line :1555:27*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1555:53*/(nargs); _cgoCheckPointer(_cgo0, nil); return /*line :1555:61*/_Cfunc_duk_pnew(_cgo0, _cgo1); }())
	return d.castStringToError(result)
}

// See: http://duktape.org/api.html#duk_push_buffer_object
func (d *Context) PushBufferObject(bufferIdx, size, length int, flags uint) {
	func() { _cgo0 := /*line :1562:3*/d.duk_context; var _cgo1 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1563:14*/(bufferIdx); var _cgo2 _Ctype_duk_size_t = _Ctype_duk_size_t /*line :1564:15*/(size); var _cgo3 _Ctype_duk_size_t = _Ctype_duk_size_t /*line :1565:15*/(length); var _cgo4 _Ctype_duk_uint_t = _Ctype_duk_uint_t /*line :1566:15*/(flags); _cgoCheckPointer(_cgo0, nil); /*line :1567:3*/_Cfunc_duk_push_buffer_object(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }()
}

// See: http://duktape.org/api.html#duk_push_c_lightfunc
func (d *Context) PushCLightfunc(fn *[0]byte, nargs, length, magic int) int {
	return int(func() _Ctype_duk_idx_t{ _cgo0 := /*line :1573:3*/d.duk_context; var _cgo1 *[0]byte = /*line :1574:3*/fn; var _cgo2 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1575:14*/(nargs); var _cgo3 _Ctype_duk_idx_t = _Ctype_duk_idx_t /*line :1576:14*/(length); var _cgo4 _Ctype_duk_int_t = _Ctype_duk_int_t /*line :1577:14*/(magic); _cgoCheckPointer(_cgo0, nil); return /*line :1578:3*/_Cfunc_duk_push_c_lightfunc(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }())
}

// See: http://duktape.org/api.html#duk_push_error_object_va
func (d *Context) PushErrorObjectVa(errCode int, format string, values ...interface{}) {
	__str__ := ( /*line :1583:13*/_Cfunc_CString /*line :1583:21*/)(fmt.Sprintf(format, values...))
	func() { _cgo0 := /*line :1584:27*/d.duk_context; var _cgo1 _Ctype_duk_errcode_t = _Ctype_duk_errcode_t /*line :1584:57*/(errCode); var _cgo2 *_Ctype_char = /*line :1584:68*/__str__; _cgoCheckPointer(_cgo0, nil); /*line :1584:76*/_Cfunc__duk_push_error_object(_cgo0, _cgo1, _cgo2); }()
	func() { _cgo0 := /*line :1585:9*/unsafe.Pointer(__str__); _cgoCheckPointer(_cgo0, nil); /*line :1585:33*/_Cfunc_free(_cgo0); }()
}

// See: http://duktape.org/api.html#duk_push_external_buffer
func (d *Context) PushExternalBuffer() {
	func() { _cgo0 := /*line :1590:30*/d.duk_context; _cgoCheckPointer(_cgo0, nil); /*line :1590:44*/_Cfunc__duk_push_external_buffer(_cgo0); }()
}

/**
 * Unimplemented.
 *
 * CharCodeAt see: http://duktape.org/api.html#duk_char_code_at
 * CreateHeap see: http://duktape.org/api.html#duk_create_heap
 * DecodeString see: http://duktape.org/api.html#duk_decode_string
 * Free see: http://duktape.org/api.html#duk_free
 * FreeRaw see: http://duktape.org/api.html#duk_free_raw
 * GetCFunction see: http://duktape.org/api.html#duk_get_c_function
 * GetMemoryFunctions see: http://duktape.org/api.html#duk_get_memory_functions
 * MapString see: http://duktape.org/api.html#duk_map_string
 * PushSprintf see: http://duktape.org/api.html#duk_push_sprintf
 * PushVsprintf see: http://duktape.org/api.html#duk_push_vsprintf
 * PutFunctionList see: http://duktape.org/api.html#duk_put_function_list
 * PutNumberList see: http://duktape.org/api.html#duk_put_number_list
 * Realloc see: http://duktape.org/api.html#duk_realloc
 * ReallocRaw see: http://duktape.org/api.html#duk_realloc_raw
 * RequireCFunction see: http://duktape.org/api.html#duk_require_c_function
 * ConfigBuffer see: http://duktape.org/api.html#duk_config_buffer
 * GetBufferData see: http://duktape.org/api.html#duk_get_buffer_data
 * StealBuffer see: http://duktape.org/api.html#duk_steal_buffer
 * RequireBufferData see: http://duktape.org/api.html#duk_require_buffer_data
 * IsEvalError see: http://duktape.org/api.html#duk_is_eval_error
 */
